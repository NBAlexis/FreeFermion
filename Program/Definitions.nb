(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    329461,       7021]
NotebookOptionsPosition[    317746,       6845]
NotebookOutlinePosition[    318149,       6861]
CellTagsIndexPosition[    318106,       6858]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Definitions", "Chapter",
 CellChangeTimes->{{3.9016357690679297`*^9, 3.9016357813436623`*^9}, {
  3.9016811197103996`*^9, 3.90168112208389*^9}},
 FontFamily->"Swis721 BT",
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0.5019607843137255, 0.],
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"1a8325b0-ed15-4586-8d07-4b0361d8c495"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9018628024256673`*^9, 3.9018628259673624`*^9}},
 CellLabel->
  "In[411]:=",ExpressionUUID->"771e7245-5353-4bc7-ad30-cf8b3b279260"],

Cell[CellGroupData[{

Cell["Common definitions", "Section",
 CellChangeTimes->{{3.9016361146751885`*^9, 3.901636131587021*^9}, 
   3.9016737333786683`*^9},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1],
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"8ad6be80-8c7c-4c10-8445-3e8615939bfd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"zeros", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"}
     }], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{"gmu", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "0", "0", "0"},
      {"0", "1", "0", "0"},
      {"0", "0", "1", "0"},
      {"0", "0", "0", "1"}
     }], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{"gm1", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0", 
       RowBox[{"-", "I"}]},
      {"0", "0", 
       RowBox[{"-", "I"}], "0"},
      {"0", "I", "0", "0"},
      {"I", "0", "0", "0"}
     }], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{"gm2", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0", 
       RowBox[{"-", "1"}]},
      {"0", "0", "1", "0"},
      {"0", "1", "0", "0"},
      {
       RowBox[{"-", "1"}], "0", "0", "0"}
     }], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{"gm3", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", 
       RowBox[{"-", "I"}], "0"},
      {"0", "0", "0", "I"},
      {"I", "0", "0", "0"},
      {"0", 
       RowBox[{"-", "I"}], "0", "0"}
     }], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{"gm4", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "1", "0"},
      {"0", "0", "0", "1"},
      {"1", "0", "0", "0"},
      {"0", "1", "0", "0"}
     }], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{"gm5", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "0", "0", "0"},
      {"0", "1", "0", "0"},
      {"0", "0", 
       RowBox[{"-", "1"}], "0"},
      {"0", "0", "0", 
       RowBox[{"-", "1"}]}
     }], "\[NoBreak]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gammalst", "=", 
    RowBox[{"{", 
     RowBox[{"gm1", ",", "gm2", ",", "gm3", ",", "gm4", ",", "gm5"}], "}"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spinnorsplit", "[", "n_", "]"}], ":=", 
    RowBox[{"Return", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"IntegerPart", "[", 
        RowBox[{"n", "/", "4"}], "]"}], ",", 
       RowBox[{"Mod", "[", 
        RowBox[{"n", ",", "4"}], "]"}]}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"functionGetCoordinate", "[", 
     RowBox[{"x_", ",", "l_"}], "]"}], ":=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"IntegerPart", "[", 
       RowBox[{"x", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"l", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "*", 
          RowBox[{"l", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "*", 
          RowBox[{"l", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"IntegerPart", "[", 
         RowBox[{"x", "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"l", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "*", 
            RowBox[{"l", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}], "]"}], ",", 
        RowBox[{"l", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"IntegerPart", "[", 
         RowBox[{"x", "/", 
          RowBox[{"l", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"l", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Mod", "[", 
       RowBox[{"x", ",", 
        RowBox[{"l", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nall", "[", "L_", "]"}], ":=", 
    RowBox[{
     RowBox[{"L", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "*", 
     RowBox[{"L", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "*", 
     RowBox[{"L", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "*", 
     RowBox[{"L", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"torusBound", "[", 
     RowBox[{"x_", ",", "L_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "retx", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"retx", "=", "x"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", "0"}], ",", 
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"retx", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"L", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ">=", 
          RowBox[{"L", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"retx", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{"L", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "<", "0"}], ",", 
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"retx", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", 
           RowBox[{"L", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}]}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">=", 
          RowBox[{"L", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"retx", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"L", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "<", "0"}], ",", 
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"retx", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "+", 
           RowBox[{"L", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}]}]}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ">=", 
          RowBox[{"L", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"retx", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "-", 
           RowBox[{"L", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "<", "0"}], ",", 
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"retx", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "+", 
           RowBox[{"L", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}]}]}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ">=", 
          RowBox[{"L", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"retx", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "-", 
           RowBox[{"L", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "retx", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"If", " ", 
     RowBox[{"torusOrDirichlet", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "is", " ", "0"}], ",", " ", 
    RowBox[{"it", " ", "is", " ", "Dirichlet"}], ",", " ", 
    RowBox[{"if", " ", "it", " ", "is", " ", "1"}], ",", " ", 
    RowBox[{"it", " ", "is", " ", "torus"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dirichlet", "[", 
     RowBox[{"x_", ",", "L_", ",", "torusOrDirichlet_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "retx", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"retx", "=", "x"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", "0"}], ",", 
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"retx", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{
            RowBox[{"L", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "*", 
            RowBox[{"torusOrDirichlet", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}]}]}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ">=", 
          RowBox[{"L", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"retx", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"L", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "*", 
            RowBox[{"torusOrDirichlet", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "<", "0"}], ",", 
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"retx", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", 
           RowBox[{
            RowBox[{"L", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "*", 
            RowBox[{"torusOrDirichlet", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}]}]}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">=", 
          RowBox[{"L", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"retx", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"L", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "*", 
            RowBox[{"torusOrDirichlet", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "<", "0"}], ",", 
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"retx", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "+", 
           RowBox[{
            RowBox[{"L", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "*", 
            RowBox[{"torusOrDirichlet", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}]}]}]}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ">=", 
          RowBox[{"L", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"retx", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"L", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "*", 
            RowBox[{"torusOrDirichlet", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "<", "0"}], ",", 
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"retx", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "+", 
           RowBox[{
            RowBox[{"L", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "*", 
            RowBox[{"torusOrDirichlet", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}]}]}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ">=", 
          RowBox[{"L", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"retx", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"retx", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"L", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "*", 
            RowBox[{"torusOrDirichlet", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "retx", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"isOffset", "[", 
     RowBox[{"x_", ",", "y_", ",", "offsetv_", ",", "L_", ",", "boundary_"}], 
     "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1", ",", "x2", ",", "dx1", ",", "dx2"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"x1", "=", 
        RowBox[{"functionGetCoordinate", "[", 
         RowBox[{"x", ",", "L"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x2", "=", 
        RowBox[{"functionGetCoordinate", "[", 
         RowBox[{"y", ",", "L"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dx1", "=", 
        RowBox[{"x1", "+", "offsetv"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dx2", "=", 
        RowBox[{"boundary", "[", 
         RowBox[{"dx1", ",", "L"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"dx2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
            RowBox[{"x2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
           RowBox[{
            RowBox[{"dx2", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
            RowBox[{"x2", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "&&", 
           RowBox[{
            RowBox[{"dx2", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
            RowBox[{"x2", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "&&", 
           RowBox[{
            RowBox[{"dx2", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", 
            RowBox[{"x2", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"dx1", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "!=", 
           RowBox[{"dx2", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"dx2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
            RowBox[{"x2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
           RowBox[{
            RowBox[{"dx2", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
            RowBox[{"x2", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "&&", 
           RowBox[{
            RowBox[{"dx2", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
            RowBox[{"x2", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "&&", 
           RowBox[{
            RowBox[{"dx2", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", 
            RowBox[{"x2", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}], ",", "False"}], "}"}], "]"}],
        ";"}], "*)"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eta", "[", 
     RowBox[{"n_", ",", "mu_"}], "]"}], ":=", 
    RowBox[{"Product", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"n", "[", 
        RowBox[{"[", "nu", "]"}], "]"}]], ",", 
      RowBox[{"{", 
       RowBox[{"nu", ",", "1", ",", 
        RowBox[{"mu", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"diagnalTerm", "[", 
     RowBox[{"coef_", ",", "L_", ",", "mtr_"}], "]"}], ":=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n1", ",", "n2", ",", "n1p", ",", "n2p"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Return", "[", "\[IndentingNewLine]", 
        RowBox[{"coef", " ", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"n1", "=", 
             RowBox[{"spinnorsplit", "[", "x", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"n2", "=", 
             RowBox[{"spinnorsplit", "[", "y", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"n1p", "=", 
             RowBox[{"functionGetCoordinate", "[", 
              RowBox[{
               RowBox[{"n1", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "L"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"n2p", "=", 
             RowBox[{"functionGetCoordinate", "[", 
              RowBox[{
               RowBox[{"n2", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "L"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"n1p", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
                RowBox[{"n2p", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
               RowBox[{
                RowBox[{"n1p", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
                RowBox[{"n2p", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "&&", 
               RowBox[{
                RowBox[{"n1p", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
                RowBox[{"n2p", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "&&", 
               RowBox[{
                RowBox[{"n1p", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", 
                RowBox[{"n2p", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}]}], ",", 
              RowBox[{"mtr", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"n1", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
                 RowBox[{
                  RowBox[{"n2", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "+", "1"}]}], "]"}], "]"}],
               ",", "0"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"nall", "[", "L", "]"}]}], "-", "1"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"y", ",", "0", ",", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"nall", "[", "L", "]"}]}], "-", "1"}]}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
       ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"onesetTerm", "[", 
     RowBox[{
     "mu_", ",", "pm_", ",", "L_", ",", "coef_", ",", "mtr_", ",", 
      "boundary_"}], "]"}], ":=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n1", ",", "n2", ",", "deltav", ",", "offset"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Return", "[", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"n1", "=", 
            RowBox[{"spinnorsplit", "[", "x", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"n2", "=", 
            RowBox[{"spinnorsplit", "[", "y", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"deltav", "=", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"deltav", "[", 
             RowBox[{"[", 
              RowBox[{"mu", "+", "1"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"deltav", "[", 
              RowBox[{"[", 
               RowBox[{"mu", "+", "1"}], "]"}], "]"}], "+", "pm"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"offset", "=", 
            RowBox[{"isOffset", "[", 
             RowBox[{
              RowBox[{"n1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"n2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "deltav", ",", "L", ",", 
              "boundary"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"offset", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"offset", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"-", "1"}], ",", "1"}], "]"}], "coef", " ", 
              RowBox[{"mtr", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"n1", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
                 RowBox[{
                  RowBox[{"n2", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "+", "1"}]}], "]"}], 
               "]"}]}], ",", "0"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", 
            RowBox[{
             RowBox[{"4", 
              RowBox[{"nall", "[", "L", "]"}]}], "-", "1"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"y", ",", "0", ",", 
            RowBox[{
             RowBox[{"4", 
              RowBox[{"nall", "[", "L", "]"}]}], "-", "1"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"isOffsetSite", "[", 
     RowBox[{
     "x1_", ",", "x2_", ",", "offsetv_", ",", "L_", ",", "boundary_"}], "]"}],
     ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dx1", ",", "dx2"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dx1", "=", 
        RowBox[{"x1", "+", "offsetv"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dx2", "=", 
        RowBox[{"boundary", "[", 
         RowBox[{"dx1", ",", "L"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"dx2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
            RowBox[{"x2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
           RowBox[{
            RowBox[{"dx2", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
            RowBox[{"x2", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "&&", 
           RowBox[{
            RowBox[{"dx2", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
            RowBox[{"x2", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "&&", 
           RowBox[{
            RowBox[{"dx2", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", 
            RowBox[{"x2", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"dx1", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "!=", 
           RowBox[{"dx2", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"dx2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
            RowBox[{"x2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
           RowBox[{
            RowBox[{"dx2", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
            RowBox[{"x2", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "&&", 
           RowBox[{
            RowBox[{"dx2", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
            RowBox[{"x2", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "&&", 
           RowBox[{
            RowBox[{"dx2", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", 
            RowBox[{"x2", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}], ",", "False"}], "}"}], "]"}],
        ";"}], "*)"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"diagnalTermStaggered", "[", 
     RowBox[{"coef_", ",", "L_"}], "]"}], ":=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n1", ",", "n2", ",", "n1p", ",", "n2p"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Return", "[", "\[IndentingNewLine]", 
        RowBox[{"coef", " ", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"n1p", "=", 
             RowBox[{"functionGetCoordinate", "[", 
              RowBox[{"x", ",", "L"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"n2p", "=", 
             RowBox[{"functionGetCoordinate", "[", 
              RowBox[{"y", ",", "L"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"n1p", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
                RowBox[{"n2p", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
               RowBox[{
                RowBox[{"n1p", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
                RowBox[{"n2p", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "&&", 
               RowBox[{
                RowBox[{"n1p", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
                RowBox[{"n2p", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "&&", 
               RowBox[{
                RowBox[{"n1p", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", 
                RowBox[{"n2p", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}]}], ",", "1", ",", "0"}], 
             "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", 
             RowBox[{
              RowBox[{"nall", "[", "L", "]"}], "-", "1"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"y", ",", "0", ",", 
             RowBox[{
              RowBox[{"nall", "[", "L", "]"}], "-", "1"}]}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
       ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"onesetTermStaggered", "[", 
     RowBox[{
     "mu_", ",", "pm_", ",", "L_", ",", "coef_", ",", "etaFunction_", ",", 
      "boundary_"}], "]"}], ":=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n1", ",", "n2", ",", "deltav", ",", "offset"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Return", "[", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"n1", "=", 
            RowBox[{"functionGetCoordinate", "[", 
             RowBox[{"x", ",", "L"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"n2", "=", 
            RowBox[{"functionGetCoordinate", "[", 
             RowBox[{"y", ",", "L"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"deltav", "=", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"deltav", "[", 
             RowBox[{"[", 
              RowBox[{"mu", "+", "1"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"deltav", "[", 
              RowBox[{"[", 
               RowBox[{"mu", "+", "1"}], "]"}], "]"}], "+", "pm"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"offset", "=", 
            RowBox[{"isOffsetSite", "[", 
             RowBox[{
             "n1", ",", "n2", ",", "deltav", ",", "L", ",", "boundary"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"offset", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"offset", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"-", "1"}], ",", "1"}], "]"}], "coef", " ", 
              RowBox[{"etaFunction", "[", "n1", "]"}]}], ",", "0"}], "]"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", 
            RowBox[{
             RowBox[{"nall", "[", "L", "]"}], "-", "1"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"y", ",", "0", ",", 
            RowBox[{
             RowBox[{"nall", "[", "L", "]"}], "-", "1"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"offsetTermStaggered", "[", 
    RowBox[{
    "deltav_", ",", "L_", ",", "coef_", ",", "etaFunction_", ",", 
     "boundary_"}], "]"}], ":=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n1", ",", "n2", ",", "offset"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"n1", "=", 
           RowBox[{"functionGetCoordinate", "[", 
            RowBox[{"x", ",", "L"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"n2", "=", 
           RowBox[{"functionGetCoordinate", "[", 
            RowBox[{"y", ",", "L"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"offset", "=", 
           RowBox[{"isOffsetSite", "[", 
            RowBox[{
            "n1", ",", "n2", ",", "deltav", ",", "L", ",", "boundary"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"offset", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"offset", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"-", "1"}], ",", "1"}], "]"}], "coef", " ", 
             RowBox[{"etaFunction", "[", "n1", "]"}]}], ",", "0"}], "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", 
           RowBox[{
            RowBox[{"nall", "[", "L", "]"}], "-", "1"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"y", ",", "0", ",", 
           RowBox[{
            RowBox[{"nall", "[", "L", "]"}], "-", "1"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3S737c5xwbeObDsu3gXR232fnLkJpCtSJ54F0ev2
WYreAtLpXk5geuu6Bk0Q3TabXRdEbzr5zgJEl6y5bw2i37aXuYDoS7O/u4Lo
Mucv3SCapVZgEohWmrRe7DaQTkn3kAXRV3mUlEF0LtNxFRC9b7bKFRBt1xp2
D0Q/uLDsE4j+4Xn9O4g+p+ggeAdI1/KyCoPo9wKG6+8C6RgJGzB9cK/cFhAt
wrlhG4ieenvXImmht45JOy8uAdFykZnsMkBaY910HhD97dkjERB9cbW3LIg2
66/UBtGCttfBtJG3jUM8kE7YsQtMP2L9Hw2ipzq5J4Jol9cKk3OBdEuQBZgO
Sr07KR9I93BdnwyipeKm7ywA0hGOC3eB6OtvxZ+A6Akek5+C6Oh9z0NnA+kU
wX3hIBoAQCC/AQ==
  "],
 CellLabel->"In[1]:=",ExpressionUUID->"192f27a7-29f5-4744-8fe5-c56bb3f5d821"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Naive discretization", "Section",
 CellChangeTimes->{{3.9016361146751885`*^9, 3.901636131587021*^9}, {
  3.9016725848732595`*^9, 3.9016725901771708`*^9}, {3.9017218885478983`*^9, 
  3.901721896561104*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1],
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"549c0153-bd20-41d5-94e2-35a4cf647b10"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"naiveD", "[", 
    RowBox[{"L_", ",", "mass_", ",", "boundary_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"diagnalTerm", "[", 
     RowBox[{"mass", ",", "L", ",", "gmu"}], "]"}], "+", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"onesetTerm", "[", 
        RowBox[{"mu", ",", "1", ",", "L", ",", 
         FractionBox["1", "2"], ",", 
         RowBox[{"gammalst", "[", 
          RowBox[{"[", 
           RowBox[{"mu", "+", "1"}], "]"}], "]"}], ",", "boundary"}], "]"}], 
       "-", 
       RowBox[{"onesetTerm", "[", 
        RowBox[{"mu", ",", 
         RowBox[{"-", "1"}], ",", "L", ",", 
         FractionBox["1", "2"], ",", 
         RowBox[{"gammalst", "[", 
          RowBox[{"[", 
           RowBox[{"mu", "+", "1"}], "]"}], "]"}], ",", "boundary"}], "]"}]}],
       ",", 
      RowBox[{"{", 
       RowBox[{"mu", ",", "0", ",", "3"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"naiveDNum", "[", 
    RowBox[{"L_", ",", "mass_", ",", "boundary_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"diagnalTerm", "[", 
     RowBox[{
      RowBox[{"N", "[", "mass", "]"}], ",", "L", ",", "gmu"}], "]"}], "+", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"onesetTerm", "[", 
        RowBox[{"mu", ",", "1", ",", "L", ",", "0.5", ",", 
         RowBox[{"gammalst", "[", 
          RowBox[{"[", 
           RowBox[{"mu", "+", "1"}], "]"}], "]"}], ",", "boundary"}], "]"}], 
       "-", 
       RowBox[{"onesetTerm", "[", 
        RowBox[{"mu", ",", 
         RowBox[{"-", "1"}], ",", "L", ",", "0.5", ",", 
         RowBox[{"gammalst", "[", 
          RowBox[{"[", 
           RowBox[{"mu", "+", "1"}], "]"}], "]"}], ",", "boundary"}], "]"}]}],
       ",", 
      RowBox[{"{", 
       RowBox[{"mu", ",", "0", ",", "3"}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.901636562196027*^9, 3.901636585508125*^9}, {
   3.901672305627967*^9, 3.901672365826141*^9}, {3.9016724635147285`*^9, 
   3.9016726281726494`*^9}, {3.901672883361407*^9, 3.901673010457535*^9}, {
   3.901673061809091*^9, 3.9016730663482337`*^9}, {3.9016737757183237`*^9, 
   3.901673790836546*^9}, {3.901673850004834*^9, 3.901673918301456*^9}, {
   3.901673957775786*^9, 3.9016739964987493`*^9}, {3.901674044702304*^9, 
   3.9016740448451767`*^9}, {3.9016746488345013`*^9, 
   3.9016748338011904`*^9}, {3.9016751560906816`*^9, 3.901675210177564*^9}, {
   3.901675257808323*^9, 3.9016752584087725`*^9}, 3.90167531683807*^9, {
   3.9016758677189255`*^9, 3.901676144250578*^9}, {3.901677116619393*^9, 
   3.901677171971233*^9}, {3.9016773160338087`*^9, 3.9016773285996647`*^9}, {
   3.901677514427377*^9, 3.901677592011022*^9}, {3.9016776499767065`*^9, 
   3.901677697485874*^9}, {3.901677727783099*^9, 3.90167775188526*^9}, {
   3.9016802613851843`*^9, 3.9016802772944527`*^9}, {3.9016805789385867`*^9, 
   3.9016806038537874`*^9}, {3.9016806635989084`*^9, 3.90168071309875*^9}, {
   3.901680776510417*^9, 3.9016807850285635`*^9}, 3.901681014428817*^9, {
   3.9017218996610727`*^9, 3.9017219109248767`*^9}, {3.901722907235613*^9, 
   3.901722907831251*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"808bc477-ceae-4629-843e-664db32bff02"]
}, Closed]],

Cell[CellGroupData[{

Cell["Wilson Dirac fermion", "Section",
 CellChangeTimes->{{3.9016361146751885`*^9, 3.901636131587021*^9}, {
  3.901636375430645*^9, 3.90163637816888*^9}, {3.9017219147549834`*^9, 
  3.90172191974658*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1],
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"a74b09e2-8aaf-4a42-a6bf-95234b67b7af"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
KCSKmpP0ZCFNPTysdEZCjapGJdS4OsmiCTVMO+3Kp2fXTx32dWi79l0HRKw+
8fjt8aY82L9gbFiX9l9+NShi5bFYa+0fYagsPyAm3Du8tGeQNlQruNWffpk9
LfIti4dNHK0ttEZcyKS20EKdmIO3hdkO59C4ehXKlvDzdPfw9PLx9fX28nR3
9yoSWLZim1/0/IlJNcfOram9Ke9sHdezx6hNumM04qvbR/89+yjHec4m9Ad0
CPlD3LJW6YNswbPbVl3jeZhD/XBFWx+nyuPOOMoNovrhkpYeijJD/mUNGWCI
+sGcd8mFThvXrb1c3dZVG6uQlQ4/7CiXvS0l/dNPM8NK0eDX+5mH66+jN//Y
Obhoxqx1p6o/nMv9OCH53KTahTJFhuQB/9tkv/STyqPDy2gerlSecN7guClV
MydbcG290oQsb3kpLqR8uGts46IfzugSZN7BI3b9l/3spJweV7vZnDuW+uTU
qMGB6SXbYomOj0q/t7k2JdiUhBqPF1k0oYYJp131IHJko2pNhiz85/ydB9f3
TWtZ1Nn/izkXksT4gxMa1+46e9fF+7F39k4KKeZaotMf96xTH96XZU6/9GDf
zO7VC/tWajf85/CGGctuPZsv5AFjfmXpsInDtYUW/oKmt4WW+kY5X792bgst
wPia4witqX3Fb+zsLZUIBduv0bFJmPr+7809BMGp/uwc617Ofeu736JDyDe0
V5immf3Z4YeceYjq2qwGbl4tfrdYQ58b4os9/T9xCvwmkqW4gGGmJhd6t5BI
M16tNfW68Re9Mjkh4bX5EhKSHWSebuqRbz9J70bkZYYf+yDuk3B1dVhISN95
B1b2LKydtu4UbJlNZZXX5zb1ypyCunCbpXfsVBiJf3bShKmcQhYY3B5Nfe+X
BgqJvOwIEx6R5524kOreum6lMp4UKtz8AgL8Cr25KZL6NF9wI/PZEWNXflm9
/x7LrbZWP/itoUIiK6FzvYP439KWrhkJNUI3GJFQ4/WWboUtmVzI2NMuxh8Y
Hlw9bHvsu/Osvj2zrkJwqTnkh9AqreZf03y3xCOjK2vjrE7NlzyzSp/+viz1
/cLjfRMa+Sm864za9UhTSMnHRrxZR2vS7A/kJRYOmzheW2jJL+ggbaGOF+3c
FlqAsTXH9NbU2kdue8l/f1NEqhmX6rpexEfzQ5wFidTrq605ThnIsW/N+A06
hHxFdTmihkJzC9TvHzLPWFDK1TlNff3ar3xo94H8y/1Dgtyrjoh6QVQIMCxl
n4nJhdJHWotbaIcWEql3j+3GhZLSUg8MDsyUKcccglPQd8fs3+2qrk/VPIGU
enbd/HZ8kXRtbf+QlqN2PlRqsgLt+6F1cHBI2OLzlhr7qh/80bFolhTUn8+8
bI+pWuo7s+opNJOmu24xeOpTDw0tKTN12XYeiQslnZ4YXEDmUanzxD8O3ojX
VkoxNf7arhk9anjJZMV6/BX/QQ+UcmJ0tTqWCRK++/zNXdwFwUXnQ+TE7T18
MiKTjY1KqHFo6CeWTKhh7GlPPDyydovfrmf63OQ/OxXUbnVYfeJFbaGqLv1U
XaG93yw34qiVBm3vylLXi+KzvcOqFpAW+HTs0XeXs/runMYFNK2ZzFH3+VbF
/D1pWqR14mgWpopeMfH3s68c7VAtHBdyvLbQcl/QYdpCHa/ZuS20ACNrjsO0
pnakPDVaE5+RlRyqK4Pwqz87eQrGZJnKqW+lQ7A+m/cIYuz8Jk6aBGRtV1tt
/ejHSfxvZ1hQ0cYzL9hzgZ760ZZeZYq1XHjdIa9MwOGozk+okjFQMHrEmrA9
Yz6MRCjQalmOU20/9PrG/g0rly1bar5ly1ZtjLpt/60kxf+WaJ5ACi5vZpun
3Nk6LOTzfmuvW7PpE5/u+KZU5hTUBWpOOGn70niTo0/q980ug+PKV2vauwqC
a4e1pqzozRNxIeWlScFuJUOXXNFxAl6dnNTAs2DIgodvLw3x+cauQaFrjL5U
jJJ6RJM1Q1Ft4qVsd1jKYyPKap9eKqr+eMGYhBoRNS2aUMO4066K/rlB8Pen
M1ci9YPfPtdEHZ0a/PK2NVI/iPypd7dvJmyM1lnZxaTnMTFPnsW/fJ2YlJyU
+PrVi7inj2MexZly0/OuLHUc5a2FLbylQqEGM65+OKgQHy9pob0PUNSb5RDT
pDNJujivfY1Wsy/Yv600ivhkR1it2oN3PHKogrRwXMjx2kJLfUEHagt1HJyd
20ILMKrmOFBraj9vnllJvbpt0fFE7s1iIc1eKQaeLebQt9Ih2ILNe4TEtR00
j7rTb4Lu2egTPx7J15Z3Dirfa4u9uvfXJybWLd0o4og9k7ICeYn6wZxGJiYX
StnXXzvBSCIUbL7IkZbh20riX901TyC1iQk1SRVCgjv8csoG8xNfRn1bMXMK
aqegIfvibXwG3qyhkwUYzjguPprXxEki9ey+3ZRhZV6IC73Y8j//qt8d0Tcd
TH3z1899Q+a/uRlS35jRoPKww0ZOrDNWRnxOVip7gi/1zZ8/e5dQw3DJi49/
b2bRhBrGnXb1zemNGs+6leUMJ+/82ldzbekckut8m/vrh7RsXK+af0HtWhGZ
q3eJoOp1Q9qN2f7E+C/0riyzvfvdRS29pIK8bPjBxKyvaG9BJPKg707Yfwbj
h1T31nQJCh5z5GVeapqVt5a1+6TW+CNGLPSxFcvGhRywLbTQF3SktlDHp9u3
LbQAo2qOI7Wm9hO3ul0hzQO7Zot0pF9UXfixqiZoVMzwWqEc+lY6BBuxbY+Q
vLmLmyYuVCPiik0+7yOjehA5tvuP++yxab3q6ry+YcsukmsaMJp2pwuJKcmF
EveEBWjDQlK/bpscO4eX+trqwaGtmjdvZo7mzVuHDlt3M/to/E1gROrTJGxI
q09rd597/JmtwhdJZ36qVTBzCupSg/bbtslL3RdWPCO30lFDwx/1rel1FBJp
kb67bXkvZJ2znklK5Nflcn7m/Tqyd+nmv2dMJzvybZVGs7MO2XNNdXVSTYVm
RfyeLIUrPlv+RQFTEmps7mrZhBpGnnYx+XVC1g99szWiMUHHzB95/9cG6YNy
ecXRJ8255XxXlll+nnRwaPqlLjjXnZH99KVk3HPJK35/xpFuA5TXZjfyDf7p
vBUe8ItP986cst1aqQLEx+s7FQvsbbO0kOoHu34OD+vbt48+vdtWdpO6VWrT
W+9v9O3b/9vZ+2KNKhDbt4U2+oIO1RZmfcHubaEFGFdzHKg1ffc21u+IM0ve
3adIxgO76OxnUHw4r7Fmzym3DmsMp+/W17fSIdiQLXuElB09NBk8NXPJrP9h
AOC43s79EQq1MzK5UPymbr7a5fqudX7W0fs6lOT94UGFFIJ5WY0EQeFR6bvs
y9TfbG8iOHkW9y/s5V00sEyF6vVafjVowi9r/r2dYO0uTBn9W4jn+xTUUp9m
WbN6WltqRpUxKi50Y1otncOrHOU2LmSVs55F6ou41zkf2+u/egb13J6UlvZy
+9dVu2+x/KyujHoo9euTdTlfUuTXb9KeN5770IiEGlFDSls2oYZ5p137l/d/
beiUPnb36LTRtJUcLzeEeggSWeDgKLO+x7uyzPzj11u/8pGm3wU0mvNAR3j4
zRYmDrVsQH13YTPPwLA9VlkHk3pwkL9X90ir3WCob/7SoFCpgftt81RReW52
u+DKFSqU16ukl0Ki8ArU/wsVKlSp1WnBFaPaX9u3hbb6go7UFmZ9we5toQWY
3ZzaqzV9yxYd8YeUp8eU14TBdEzzefelBKfPdTXmWejrW+kQbMt2PULKX909
NfOFqv140eqfBQCOy+TkQqroabW1KadlpQbYZVag3b1NLuTafLF2arXq5b1T
kcsiegV7y9KHMoXrDd/+wLpxGvX9lR2KZKR3cq4waPdTW8/YSj2oyYIpkZUw
PGoUH85p5CSRevc06V4yL6wjM0yMmde05g8XUh+vaF9z+BEr3EurLv5YTZE+
eB9yMDXLzydW066ckFcw5sFl6rERQcW/jrTknDPzTrtG/B/t3QRjM8R+IGX/
AH+ZNg+8eW3Su7LM/K57tRn5dT9+zshNqk2zZeFFMbmQdGhoaadq1prvkBo1
sLjn/3ZY8cHzi01dvAo2mX/fIS57C68jc7y20MIJlPSzXVuY7ef2bgstwOzm
1F6tqZ2o786ur0hvkb117jb25gmo5sbfiCxTuvtWOgSbs1WPkLyps2aTXc1G
9Vb+JABwYOLDuW+TC40xJrmQ+Hh956JSzdO38oP+MXl2Z0r8g5vR0VfNFx19
8+ELez/LS9zW3VszVzl4yrVMna0yZufAiumFKfVstsC6z4teHfu+hotmAPLF
79fsUBqq8xMqa5bpF+ljeEVE/IrWzoJQoOMGU/Id5o+4UFrKnrAKPbZcntmo
ToRVhmXKE9+Vk+uYtf5mOrtEKNRxveGnhIkHBn3i/83fls1HadZpT5e8K2OT
4ao/GJEh9gOqCz9UVUgEl6a/x5oXJX1Xlh/+MP1utrGTJh9FmK4H9aroyTUV
78PDDuHVlm7eimCrXTXWjwulJe7o6SuvYuLptxILh00cry20WVzIdm1h1s+1
f1toAWY2p3ZrTe0k/o/22uRCzRfpaJGV57QXkpFzoHT3rXQIdmCjHiFhTXvn
9IbCqdGch9b9IABwZO+SCxUxJrmQGLuhiyazjNSz4fQLJj8SSdnVx0+abbaw
qbJPj7CxN8mFdK2ieruBu0vb1e8yGSRf37P3uiVvpJR3Vnb0l6WPEquN/NfW
GaczaGana76m65frDY5TM9acaTpbEw41n8SFlGfH1mjav1/NpnPv6f4WqtgT
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
nIZOe/o7lJYJUvfyXRZfTtHcrhwaXafG4J0HIoILSL3ar36b1kH97OjkkMrt
FuWQX/1N7nxFTX0PHMWXj5/kfM3kUJbJF2c19lL4hy6//i4innp33VclXfzb
LrySpUKqbu1cd+T9E1btklMj9scWX905uXfT8M+cBFlAu6kbIvdEnbn32oy2
NmV3Xz+JovVKXSthTDs0dcz++RETJozP6vvuNVzlFTuPyfbChAkRc/Zmue02
t+Yoz4wpL8hqz9CVwuP1vVP7toxJvzOTB329dE/UwXQH9kRuWjZtYJNAr09a
Tz5k0efbFg+bOFpbaLu4UL5oC7Vvlrs8SOYyUHMcqjW1i5R/+hXLyF4puIXM
ufXuZIrPDk9tXaPZlH1rexSRCi6tV2hmjaVcnNKganiU3mecOdWnj7JDSJd4
fFa3Fk2aNDJKk2ahEfuzzs8z+zK3QY/w5pGuc/PFuhe6AkB+pbowsYaLVDCU
3VmQu3r7B1Wv1yx04NR1xx4k0VZmSNwYWkgQFEHfHdc9shLj/v2hYRHP6j1+
mjSy82fB3VbdtMQjSDF2W+8yCkFwKtd3u2M8xMuYdSu4h240PBlKeXxkWbnU
q9uWnMb3Kdt7eCsUTs6uBQu5e3h6+xQuUrRYUb/CPl6eHu6FCrg6OykUJQYe
yFOPcpL3hJWoqu8Brxj7e1MXQVFt4qUPX1dFT04fnbkYs6GJSrM+QurT5U+9
qyNS70d+H+LvLMi8q3ccMmHmohXLF8z8YVDHOoEevtW/mvbPPaNuY8w/TkOn
Xf0oMrxW6eqhw6f+OuOHsBbBDYdsup2iuYnbEl67iE+1LmOmTf8pPPSzKo2H
/Xkzxxz3GbnzZaXDD+uuHq/+7lf/2xxTZRgoy9cXlvatVcS36pdDf/plzs+j
ugWXKNNs1NY7hiqj+HRZqwKCouqPxuykojw5KkguC8hVFU/5+xtfiaLdH4aX
fxg6NNWV5f1D27dvl1XbuiXkkmK12mR7oX370LAlFzK1dWbXnPSzUUmq+y5A
+7ImEYS87IhjmVvW1PM/VFNIPdussGADafmwiQXbQoscjq3iQvmiLUzLfR4k
8xmoOQ7UmtqF8uxYzdJ2WUDLvp2qeDoXrdtzzJTZM38K79zwsxbD1kUnaWaE
RIbX8CxUqcv4Hwc2rVJv9AH96RAM1aePr0NI93x9t6IKqZEbx0gV3l8syvKc
wPzL3Po9ghi7MMRZ0LHmEgCAnKQ8OrFt86F7OQ2tVHE3Dm9ft2bLkbuWeayW
cHpSPQ+pROrT9LfLJm8CZy2vtnzlLZVk74x10U5ylxbpFZmn8hXkliZFgWfo
Bj03gBkr7f0H7P/wVkJ8sriFq6D4NMLwHDNV9JRghax4n10GyjTp/uH1cyeN
Cuv6ReOGIV+Efj385zUHb5sw8S8Xx2nEaRcT7h7fueGP9bvOPHj94VqHV3dP
7tn0x5ote88/Mljjtc92JVLv/23T+TnioyVtauWcr9WoslS9engxatuqpau3
Hbj02Kj7v8S/evhkKzo91Ldn1FEInp3/zM2a09Qj4SUFRfPFhp+QmnJomT7B
hHVkZtcc5dFhpQTdqwbSMraKdtaR9T8jy66i5iTLzM98eySWDps4Vltoq7hQ
/mgL03KfBykXDNccx2hN7UKzRaqTkD5G6qGZ4pP06ELUzo2rV/+5+1j0fx9W
KtWzK/s3r1m7/dSjnJow4+oTHYKJzL/Mrd8jJO3o6SuVyD75Vl8icgAAHIH6
/vqugQpBcKk0ZI+18tWaJW7tlx6CoKg9/abhRdzqm7PquUj9em43vCIg31BF
T6rpWj3zs7H3tCvthUJfrs00xTth61feUlmJwVGpmvX/G2esvaFvRKO6+GNV
hax0+CErL63L1XHa5LSrzk/QpMNwbbFE1wRw8emO3mWDf9JzFt68g3XKUnn0
209kQsF2f7xPYqG8smLqRl1pLcVnK9sUFJxD5mfb4dgU6ruz6spl1Q3fSZty
aJmYEBcyv+Ykb+vmLvHutVP3p2g2S5Jmy/qvfrS1V2mFa8UBkZacT6kpJ0uH
TRyqLbTGF9TBIm2h/ne3UVuYZoE8SLlhi5qT+9bUPl6s/dJN324gprJWfcqP
HYIJcnGZW71HyEjPJfMP2+swD14BAMhKfHlkbHAhQZAVbbP4hoNN3RbjNnb2
lgouTeYZWCyf8cs7vg6Qe7ZelqthTl4iPpzb2LVon926xxnabBESzbOzD86q
6t6ytr5Swa3jupfa3WRahK7MlsbijaSD4WXkBRvMtvZubbk8ThucdvWDOdp0
GMFTdCTmTLm5oqO/a90ZOlLEv2e5sky9suzrulUajI/SPGdWXdYU3YcT08W4
rT1rD9qnaxJh0s6vC0sV1Y2940q8unFs7x4j117NUrtS/ulXROrTKzJ7pTP/
0DK/jdFxIfNrjvrerLoyWf1f7us8H6mazZIUwRHnX75O9+LJnYtHdm+cP/rL
4GrNw5edfmbZ60F9f3Hbsl8szLbfX644UltolS+YjWXaQn3vbqu2MM0CeZBy
x/o1J/etqX2k7A0rLtO3G4iJLFif8n+HYLxcXOZW7xG017VEVnrowTyWwRIA
8BFR3lrevphMEArWGH3QsvtCWEbi3rAAmVCg6cIYIw5O/XBFWx+nyuPOOFh4
y0rEuNXt3Aq1XaVn5nPswqYumt1R6s64+WYkpo7dMbB+1SA/mayUZpGC8lJE
y6+36NkuRf1wSUsPRZkh/1p7LUoujzPN+qdddX9Bs0KCRFZy6MFMKzuSYs9v
n/VNsG96/QyZr2cbojcHaLGyVF2aWF0hKD4ZGpWcXkybetT8pEQBRY2IN7tI
JV1b0qXRgEidETTl8ZHl5LISxk44SN7S1V3QbLyT9auJz1e1LSivHnEl692E
+YeWmdFxoVzUnMQtXT2kQaN0r1XJeJZfrFHYaM3OM6OHh3Vu+ql/IY8aAzbm
nDXFodAWfvhqHmkL0yyQBynXrFxzct2a2olSkw9IsxvIqJO5XQZkyfr0EXQI
RsvNZW7tHkF1bWothSCvOPYMi8gAAI5JfL7/2yqugiD3D1191xbztl8fmTtx
o2l/otQk9hOc68/Skw8wM9W1WQ3cvFr8buWH044h5Z9+RZ31rrF7vamLp1Tq
W7luJf+gZmFjIyZ+26Pdl0OWX3h5f3NYFc+AkIHDurTqu+6eniytL/b0/8Qp
8JtIPZv7WFCujvMNK532lMM/1C9T1N0pI4W+oPAo/km5DGVKFvcppHjzc7lf
53U5bDBi2bJMvfp7pxq1u4yZPDG8yxdfzTr57MbaPsFl6/QYFzFuQMeQ9uP/
idVdUuqb02vrziWhfrBz9d7H2X56f2NYsH/hkoHl+2bJdCv+t+yLAk6f/5bt
yaq5h5b1bYyNC5lfc1KiBgXISuvJ8yDGzGviLC3cK/LDnYReHfq2vNypyoSz
eWdUT1v4Tl5pC9NynwfJEqxTcyzTmtqL+sFvn2uSCxX5Zlcug8MWrk/W6hCy
Hpz9OgSj5eIyt3aPoF07Kbg1XaB7PhIAAPaWcnVei8JSidT9sx+P2yQPhfr2
r02C+u818a/EZ5u/KiqVBw0/YtR4LOXqnKa+fu1XPsz3/a/q0k/Vnct9d0L3
uCQ1anCgTJvaU0x+dufymbPRsQnvikSdEHvt0q04vSOal/uHBLlXHRH1wvrj
81wd53uOe9qtUZaqF3ev3Hj6fnSuToi5fObCnbgcdoZ+tvyLAoJzyIJsy0Ne
7xvcOPxfPdeW+HBet8F7s4RoxPgtXxV2qf+LzttG0w8tK2PjQubXnOSoQYFO
NbI/4M7wamOn7KkktKsgBM+vtuWdGUOOfFFYWv5oC9NynwfJQj6emmOsF+s6
ugsSoVD7P+Jy90ZWqU/5ukMwVi4uc2v3CC//7uMvk5UcuN8hdgIAACAL8b+d
/YOcBUFRqsemGJsM/lS3F7UsHDTimOnjAdW1mfUKSj1aLTFulJr+1cKCijae
eSHJ8O/mZYl/dvIM0ncrlDFqMWvhgfrRll5lirVceN0WK1BycZxZOORpt2lZ
5iRpRy9fTS6Jy1lGvq+Oj/ss+PvT+u6KX2/r99Xi2GynRnn+x2qu5UedtEqm
BCPjQmbXHPH5hlAfv04b9Pxd6oGBATLFZz9nnnoSv6pNAcESa0hsyyEvCivI
F21hWu7zIFnOx1JzjJR6ZFhpmURwavBrrtIkO0x/kJc6BCOZf5lbu0dQ35zd
oIDMt/0q24y0AQAwTdKFGY29pBKp5+c/n7Ng2j/9lPc396tYQFHlhwtmzRxO
OT+5dkFFuW8PGzlITb62vHNQ+V5bHuXnfjj1wooZf+mZlizGLgxxERQ1Td/V
+PWJiXVLN4o4EmeTx+PmH6cujnbabVuWOUk9OrxM1lwS6rjz60Y1KuKif+tr
9Z35X4Vt0Xn0CYdHVPAOmW+NNUrqe6sH9FthaAdCs2tO0vFRlYq21TsTQjvh
X152xLFMw33VhR+qKiSKerM0X1h9d0nfsdbcbNmiHO2isIr80BamWSLXmiV9
FDXHSGL88flD+49dczE3M6sdpz/IUx2Cccy/zK3dI7z4u08JuUfI3FuOt8Ue
AACaZ1afKATBKSgs0gZpLNPSUm6s6vaJU/oH1v7Z7P03Ui//XM+tQI3xJ40N
Y6keRI7t/uM+R9io2Q4yslSUCj9s4nNJ1dV5fcOWXbTZbGdzj1MvBzrtti5L
3VJPzexQt9onPs6CROpWsmb9Bhr1alUpU8zDSSoIUo/mC/XcT78+EdEmdOF1
fYPZhNOT6pVsNve6nSbQmFdzxOd7hlQt02Wdrry2qovzuzWqXbWkr7ubm2eJ
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
Iqx1raCS/v4lSn1SMsDfv1SF2u0GTvnj4O1XVC5YTNbeo9+8Uw7Qe9j55iJn
yv/ObIj4pmXtGtWqf1q7bu2a1arWCPlm5u7bibl721yciXw0BMhHXyUXuLuF
fYivzi0Z3DakRY/Jex+ZFfFWXZzZsnzpYh4KQaIh9euzyzYLRhJv7Yjo/GlR
Z0Hq6v9Z51Fz1v198Oz1mOdxT+5d+nft1G9q+wc0mrD/afrVo479q2+Qs0vI
gkeMpPIIMW5feCXPamNPmNTHJh4fV8OjxsSLpj/nTd7f31/i3X37a5P/Uh91
zB8di/m3X347b/dmidfWje0/PTf3RwaKVvX8yq4lEcPDenQK7dy979AJv66P
uvmSR29mUN2Y36FC6eKebxpiwaPbVkYKH8p9XTaqnTCi7aLS217C3aPblv/y
Y3jvbv/rN3zirKXbzz/NqZ+wd/utfHJk3jfBPnKnonX6zvrrbGxSxo/FhAcn
N0/rFeyrUPjVDlt0MsfvABhLdX1u+w97D8//bXOA3sNuNxcGpNzaNLxRQIFC
ZVuP/uPss3fXYMKtHaMbBLWaH52bg8zFmchHQ4B89FXMkp/vbi0wEIN1Kc+O
q5Rx6Ul9e/yVi0nvKXeXtvOV2qjpTri2aWyr0gUEwcm/yXfrLsbpGhypH+/+
9tNiweP+3jW2lptUoqg28RJjqLxBjN3QpZhrlTHHTYoKJZ0cV91FkJcdcczk
oXzirt6FJUX67kky9Q9zIsas7uDn3nD29bxZ7cSEu1EL+lT3SL90Ppt2w+yb
1hyKVnxxen6Par6+lVr1Ch8/ecrEkb1bVPBSCILcs1LolH2xebPY7E4Zs65L
MdlHOJLKgYXqsjHthKG2i0pve0nX1w2uV6psk34/zVu1Zc+B3X8umTmmW83C
XhU6jN98XW8fY7/2W3x28MfPfWWCwr/VjBM6R8/qpwcjQorIBUWRkMlHSYUE
S1HGrO1cVOowcaE3bHpzYZDy9rL2xWRCgZqjDma69MTHW/uVLygThEKtlj7O
9TWZizORj4YA+eirGC0f391aaiAGK0s9MDBAlhGRLdhudbzuXxJjln/V/tdr
OVc89e2ZdRU2aLqVD7aHB3tK04+3Yo/FZ3OMOapuzgnxlEk1YS+Z/4D9qdY8
LFiK+GxbT39F8Z7b9dRG3ZJP//CpS/qZNicu9GpLN09JicEHLV1vlZcnBbv6
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
f3SY5KCZHqfdgrs1x8jcxqCFd1c5mMGw5YgjH2qptPBjsCsfhvkuwe/pPI5o
wZ2VDk1gyNhhzcNax7PQohfH5wxojlh6nat27hjaVDVMqipKX67txYP0YMtp
52MWDZ1+MU/8P/TrIckBv5orOw25od/Dva0M+257I2cy0O8XfVoiMqGrViSo
LBvBtkrQiC0YBxfsj1l6jwxx3JYu/9D8ivZvo2DppT8SpXkhTbkADcWbofdw
0Z8c6qqrFF1Et/U2qACooOL+Itxvh62mRMlccv19bWpzWI/TatYtuVN7mEFr
12ryZfkEOfrlwF+K89K080KmNt1cg+7LnjksDvfC3F7IcOgRejlR9OuRYdKq
DPrOwdpo01Jxe35bpMqJZAjEswmilJ5Af5716hoQK8nilUZ4mWBCgvmWPaZe
kq1AIbjmZw7rwU16DerrtOGZTNpP/Om//gg2Sz036aIhOjsOvKQDKLXqQuLM
IyN7+l+vqcy080LlCbOt9ZpNua68xGfZy3+GmMMQ0mWZjE6jBee8+ER6lsxF
qP0ZlyaYQZDByBBK45KiXT0kg7kJpyZaciqSN/TkEVsxDhuey589Zj4fovRt
+JY8zJ94qfKdZe/CZru4L7+RK8TdsPh1Ix0cXAKOvqJTOQD9fnSYgaSJkG9k
Ya1XPh90wTQS4nueIS0XIs7YOQDBFdZ1uMdyGgaz5OmGPqYQxLVZLPcm4mMz
D7qaQerkhTQgKJ0rsxruCBVlpmO7SN+vXOlpaz1YVmpTkX19xWArbrUGwuaO
88PSKOpvlf3WXB2HMsnqhWu5wbjz9J7botMe+pW/yu9arbCNoY1B86Omt+NC
kOGAf9PlJr78/qKOXD24qdf5H1TdMTQvYqI1B4IQ+/WvaoeVotSN9pIufKbj
L1RqH2ObytSkUkBwa2YL7Dlp6uQ2dEKoJIATfzozvVdLi/auG+9KE3l05Ib+
ODnCiORQEAHm4XdsW/MlbUlQYTaCbZUg3kY7L0QvuNDEmJXlhf6HfjvsSnq4
hclIlOSFNOYCNBRvhtbDxWRy2MkLaT261bkfBvJCmkT4JAjvbQJb+FyqvbUk
ziSeTrjF9BsyT5n4w44B3ZY/IStsoPS8It28EKbhTvuy5Wa84vZc/FASt/PK
57Q0qvzaFAvJPhpit/aVVpzT4vcJ4SEnThxnzokTpyMSP1HqX1IU7v3n1GuS
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
oRQ=
    "], {{0, 127.5065524200549}, {772.0396742610384, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{143.9926, 143.9926},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{772.0396742610384, 127.5065524200549},
  PlotRange->{{0, 772.0396742610384}, {0, 127.5065524200549}}]], "Text",
 CellChangeTimes->{
  3.901723019995364*^9},ExpressionUUID->"57f98013-d6b1-4736-9de3-\
97500c86791e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"wilsonDiracD", "[", 
    RowBox[{"L_", ",", "kappa_", ",", "boundary_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"diagnalTerm", "[", 
     RowBox[{"1", ",", "L", ",", "gmu"}], "]"}], "-", 
    RowBox[{"kappa", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"onesetTerm", "[", 
         RowBox[{"mu", ",", "1", ",", "L", ",", "1", ",", 
          RowBox[{"gmu", "-", 
           RowBox[{"gammalst", "[", 
            RowBox[{"[", 
             RowBox[{"mu", "+", "1"}], "]"}], "]"}]}], ",", "boundary"}], 
         "]"}], "+", 
        RowBox[{"onesetTerm", "[", 
         RowBox[{"mu", ",", 
          RowBox[{"-", "1"}], ",", "L", ",", "1", ",", 
          RowBox[{"gmu", "+", 
           RowBox[{"gammalst", "[", 
            RowBox[{"[", 
             RowBox[{"mu", "+", "1"}], "]"}], "]"}]}], ",", "boundary"}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"mu", ",", "0", ",", "3"}], "}"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wilsonDiracDNum", "[", 
    RowBox[{"L_", ",", "kappa_", ",", "boundary_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"diagnalTerm", "[", 
     RowBox[{"1.0", ",", "L", ",", "gmu"}], "]"}], "-", 
    RowBox[{"kappa", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"onesetTerm", "[", 
         RowBox[{"mu", ",", "1", ",", "L", ",", "1.0", ",", 
          RowBox[{"gmu", "-", 
           RowBox[{"gammalst", "[", 
            RowBox[{"[", 
             RowBox[{"mu", "+", "1"}], "]"}], "]"}]}], ",", "boundary"}], 
         "]"}], "+", 
        RowBox[{"onesetTerm", "[", 
         RowBox[{"mu", ",", 
          RowBox[{"-", "1"}], ",", "L", ",", "1.0", ",", 
          RowBox[{"gmu", "+", 
           RowBox[{"gammalst", "[", 
            RowBox[{"[", 
             RowBox[{"mu", "+", "1"}], "]"}], "]"}]}], ",", "boundary"}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"mu", ",", "0", ",", "3"}], "}"}]}], "]"}]}]}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9017228545932293`*^9, 3.9017229246705866`*^9}, {
  3.901813565926524*^9, 3.901813568788122*^9}, {3.9018840958946085`*^9, 
  3.9018840975819454`*^9}, {3.90188783930554*^9, 3.9018878404061127`*^9}, {
  3.90188843701678*^9, 3.9018884388945856`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"0e96edc8-e1b5-43a3-863c-268204d50380"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Staggered fermion", "Section",
 CellChangeTimes->{{3.9016361146751885`*^9, 3.901636131587021*^9}, {
  3.901636375430645*^9, 3.90163637816888*^9}, {3.9017219147549834`*^9, 
  3.90172191974658*^9}, {3.901722992903242*^9, 3.9017229948224134`*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1],
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"e76c3dee-b864-4d99-9c89-a2424ebe92e5"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQms1FQXgB+g8MdoxBXR4AIibhiMgojrE1FBFmVzCXFBdnmggCKKrEKU
RRGfIC4QEVBZjA9FjQsoiKAYURCRAG4RBCNCRIMGzf2/Q5tOp+102s6UR8L5
MrzMdDr33N577lnuvS2nde3fvkfVkpKSgf/jT/s7B5cOGHDnkA41+dCp38De
Pft179ay36DuPbsPaNq1Ggebyb8qJSXy3iiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoijKfuSMM0yVKuaQQ0ydOqZ+/eBXvXqm
Vi1To4acWVKSeVWvbqZOrewLUJSDhkceMYceaqpVM2Vl5u+/85y8e7fZtMks
WCAn164tg/fKK83vv++XiirKQc+uXebGG2XcHX64mTkzxg937jTjxplTTjFv
vJFKxf77L/85//4b6bToBSb7SaxqFCIobfburewaRGsKzqHN94OgtAnUnHB1
WrfONGggA7ZuXfPll/HEvfuuGTgwv1OOxZ49Ygc+/jj/mevXmwkTxOAUq0A3
mzebYcPM9u1Fq0bhgtLmtdfM3LmVpsbRu4kY7/HHzdq1qQtKm0DNyatO9NGR
R8qAbdnS7NgRQxw9+/LL5ptvEtY2sMBHHzUTJ0bVGRRs9OgwpxC3QIvffjO3
3WZWrIh6ft5qFEtQqmB1H37YvPVWJYiO203ffWd69zY//5y6oLQJ1JxwdeL4
/ffLXBM5LP1VeJiRmJUrzS23mD/+iHr+P/+YPn3MO+/EK3DkSFO1ataMWZMm
Wd7tscfM+PExqp23GrmIKygXDLQ//yxCORs3SnNt21aEotwsX26OOSarwWvW
NO+9lzkhbr/DSy+ZoUNj62oCQakSqDl51enXX03z5uJejzrKvP562nUMBqNx
xx3mxRfj/YponPb/668YBc6aZVq1Mtdem3n175/pQex2aanMpxWrGrlIJigQ
uoxwunB/QQmDB5vy8iJUyQ3ZVufOWQ3eoUMm7UrW71jXtm3NV1/F+EkyQWkT
qDl51WnVKpk1YsCee67ZsCHtOgZAxH7RRbG1Fztz3XViM4tV4LPPimrFNdoh
1SiuoECInXA0RYnucHnt2u1X75OsmyzDQlibtqC0CdScKOr0/PPmsMNkwN50
k+TyyaAZ335bYrwPPpAsePp0yZpHjMifZZAC49/37MkcwSY/+aTUCuVZtEjS
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

    "], {{0, 58.}, {314., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->72],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{314., 58.},
  PlotRange->{{0, 314.}, {0, 58.}}]], "Text",
 CellChangeTimes->{
  3.9017988400131016`*^9},ExpressionUUID->"4198238c-ab47-4bea-b76b-\
3d9db15c5ad3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"eta0", "[", "n_", "]"}], ":=", 
   RowBox[{"eta", "[", 
    RowBox[{"n", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eta1", "[", "n_", "]"}], ":=", 
   RowBox[{"eta", "[", 
    RowBox[{"n", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eta2", "[", "n_", "]"}], ":=", 
   RowBox[{"eta", "[", 
    RowBox[{"n", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eta3", "[", "n_", "]"}], ":=", 
   RowBox[{"eta", "[", 
    RowBox[{"n", ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"etalst", "=", 
   RowBox[{"{", 
    RowBox[{"eta0", ",", "eta1", ",", "eta2", ",", "eta3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"staggeredDiracD", "[", 
    RowBox[{"L_", ",", "amass_", ",", "boundary_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"diagnalTermStaggered", "[", 
     RowBox[{
      RowBox[{"2", "amass"}], ",", "L"}], "]"}], "+", " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"onesetTermStaggered", "[", 
        RowBox[{"mu", ",", "1", ",", "L", ",", "1", ",", 
         RowBox[{"etalst", "[", 
          RowBox[{"[", 
           RowBox[{"mu", "+", "1"}], "]"}], "]"}], ",", "boundary"}], "]"}], 
       "-", 
       RowBox[{"onesetTermStaggered", "[", 
        RowBox[{"mu", ",", 
         RowBox[{"-", "1"}], ",", "L", ",", "1", ",", 
         RowBox[{"etalst", "[", 
          RowBox[{"[", 
           RowBox[{"mu", "+", "1"}], "]"}], "]"}], ",", "boundary"}], "]"}]}],
       ",", 
      RowBox[{"{", 
       RowBox[{"mu", ",", "0", ",", "3"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"staggeredDiracDNum", "[", 
    RowBox[{"L_", ",", "amass_", ",", "boundary_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"diagnalTermStaggered", "[", 
     RowBox[{
      RowBox[{"2.0", "amass"}], ",", "L"}], "]"}], "+", " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"onesetTermStaggered", "[", 
        RowBox[{"mu", ",", "1", ",", "L", ",", "1.0", ",", 
         RowBox[{"etalst", "[", 
          RowBox[{"[", 
           RowBox[{"mu", "+", "1"}], "]"}], "]"}], ",", "boundary"}], "]"}], 
       "-", 
       RowBox[{"onesetTermStaggered", "[", 
        RowBox[{"mu", ",", 
         RowBox[{"-", "1"}], ",", "L", ",", "1.0", ",", 
         RowBox[{"etalst", "[", 
          RowBox[{"[", 
           RowBox[{"mu", "+", "1"}], "]"}], "]"}], ",", "boundary"}], "]"}]}],
       ",", 
      RowBox[{"{", 
       RowBox[{"mu", ",", "0", ",", "3"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9018077371855435`*^9, 3.9018078230475235`*^9}, {
  3.9018078575238695`*^9, 3.901807858837962*^9}, {3.9018086962757673`*^9, 
  3.9018087082639227`*^9}, {3.901808760597535*^9, 3.901808772539726*^9}, {
  3.901808940699286*^9, 3.9018092079852476`*^9}, {3.901841054067314*^9, 
  3.9018410555794563`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"bc8ace03-8f45-4421-ba58-97c5a848be08"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
MdESj5BmPf21AZQqdF2T5TqmYHYTlA5gz1fujjm+/HvyVdTNo6eTuxbHjpxQ
PycrTiS3RXi8gN35ZUcb8xV/PIgqGTu2hwYyTbXCeBwcheZjEZ/lsU2PQZCK
r7HwWuxM0lBjQSPmhxltdHNnbz+EbuItzRQMLMSOHx+JsU0RvkFvY+vJYhZL
6d0Oz01Nu5gQeL4Srebq5ufNfqZxaa5jyXDxYhSJmNkc3Tdmf7SlTPWHvaiQ
MdWH+amuOB6HxqJROG5n+VUaNbupGxTeWG3EIZCMAYXZXVd7loDhwD1DsDuL
zeu1W/wMENd8OKwMxdxbun/vH8AWAo1lES6ehZF4Cc2rYWO2ADAHXWuJ2MKs
SDyD6rnRbG72Vgg35qJIU8QKqRnJB1HYha2zs+4JfPpsGdwVcPHFbqMbupp7
prEKyoDsS601RzozqSdZeLblwXWpmFKDLaYKL0y5JPD5ldlMDVZVxCn9addo
caE+vBOpNu6a+uqd3Zlpb9ymtiFpWBKSvRFt+1UO2KXSTqZbFZzR37PjXqE9
X//Es/VnIzfpEoK8kK8SpmzEPa2iw+FdDOb0YVZe0T56PtWU86hWzyYdCq5P
QKnR+nOltSyq4oS++mVoUzDSEF4U041nH4uQsAM+2sQKk6nHSZjdGC4KVBmb
vdD9q7W81axA6z+tdtjKaFakYXx5XaGbYxadjnuJVrzN5dsD2fJXpMuEpCto
4suM1jGn9D/gsCWUf2RUmGmqhW7STrYR79HOvPEf/0E/Vseil1sgzprlTkli
5oPmPqk4Jntc0Nstuput9kxH1zGWg7tLdElJma+C7RGbszbmnUZui6GtfW3M
Zc1hY1eEZ3h7toWypVZjO9QMNyjJmIRQT/YDw610DaXix5K8s8JIDsI79KiK
SK2T5RNC8zDx6FMQ/XZml5Ap+1l2gEt+/G0qs0WSEEjHrDq8spEXqwRV+lSs
6YrgOQL+H9NTrZneHgJTXa0fnmX/VeibX7jSRSZpFxHoyiyCH4W22j9uh48C
Cnfhyt5ZkaL5aCzKOvzGXN42wip96n10rYI5Vw0/cMy1loj8ZkU6ZtaGaymc
0B/hpanM/yCW2qMtWKQsiZNCn27vxu4T9+Z4akrB6O7NsiBNBwBIP9KJ+biJ
pWN7drYwevbeQiYNFG7os01AXCecQVV39nANNsgJ1d3SuUzH9Wk4zfeAqzbF
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
DzQh66QM6h5TvTQ6c6QUhSAjMTm7k1x7qjg04fXn0K2mzyRdCKRdRHk+FCdo
pu5Ln+1Gtdo4ZqSqvGVTXVNoqrX943IhX6hQiSftCC/xIxRxOH/4C/n4uPHF
T0yPRLrmo00BUKgwM0Y3zt0DUHu0saRCR11rLVfnI6gyKogvhSV9mT5fwsha
WQG1uwmVCRKDQ9Ro/TIOfORYi1/wQkRqXxrPxyqUwikhHUard2mU2CcmhX46
ZgSxO3CgYTqAxUc6MfGLWcBD/r7mmBVq7BkAD19MPCauayXiW77qrEtRoZs2
o8NvlZ8lJdBd/5XvSztc+hBtRdodBPtkidQ1LKlkCzSTWYB9ndIfRw0nMwVD
+X3hWr+Zk42oWYlC8Ms1vFiLWqNs1isqGZ19sE3Ef6GxKUoXwrJbuPgb8pfD
YRHL4tMWFO5tduDQP3x3gFymivgl7mEKsGb2/MMFJiHlGL+5rMJvQs4Ks5Ev
CEpbL1ErFVcKeS+NwL3FwJJs1eu1Q/j5lSITdmu3eERWam1IsKoK/pVwR6Zf
RzUVy5hzZhJ363o3C4YuaCPDNffJz//K83U3b+LGDfNesVKalVhAGhYFZ0l8
dkELCWavs+EYuW0cDoub8pm/UrIh0jCOj/YvLSg9PqJbPtOyTtKg4lmZI5f8
2C9hSchMTBbUn58sZb4LFjPzyvSpzBACmYkPdXFfjXcnUbcythp3X8g31eon
aO4pGh+l5dF8Vk1CM4eC1YGihvCyUWiT1xDpmk9m4kPdCKj5Qu6VeyHO6Fc4
6lpLxCYFZjlcXo9udZAva2CkC5otFEqOUGN+Qz5WoZeQIyUFQ3i9q9qvEuRh
On6txmZvuGGeqcVHOjHv1rJ9HK+uklMX+ZB4H38sMggs5D7gdkatS42UqMpf
OM+2At2N0++wHU/N1IUflfSd58cym7HiBIlDtC1x63TxSAp3DDtsj3LumZPp
1U7AGZWZWCFYdMIIkeHoswtzm2Ka7XIY0zGpAsYJ6Vpam2LxLd1/XpqBAiKW
xYWfUHO2mctlOqZU0yVWTBDa38lEK7c10rjdWoFPdYkVpYSrQJiNfGaF+iHq
q3QiMWyb6eM/w+HIELgqUGGYaNtx0zIhIzxY4Yk1hgUttdu4uVBMyFIzJO08
yrmyDCzzSMGT+7hzmwX/WPa6cwfxkvs3Zd4nbdcIPPJ3+FgFZTEhqz/no45D
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
Bc/meEKZFQRBfFkc+I4FO/14Uu/Nw4OgdEH/A+zfaTcwa6es2r4ap1dgzAK8
zLI/8uECanvCfygyg09PT0YpfxQrJvXl74+g8aa/nMwKgiAIwj78+zPblG+3
Vi9L8foU9mYrPnVRHYeZayjDgiCIL4I0jA2Ewgc7sgY7JaJfISgDEMW7VyKH
YmiknN+ZehzFlVCWxMks+WuaL+1TEJ02fJa9SfH4JxJHjkh9RUbi8hPT305m
BUEQBGEPOCxpxkJ858VmeTMNEypAkQ8b+LKH135F6HpblUYhCIKwJ+qHqK+C
ZwieZxFq3Gu09oBXF42mj6QraN0FD2TdqE07g3JFMPdyFkHKIXocKwN1M0XO
LxLEXLNC/QmzGiCXCzqt0as0RRAEQRDG+IDQfHCtiCtZEytSMLAwVA3wSI20
hwhtgYu2X/gIgiDsQPJe+BqWzuZwZDR8S2HkOLRuj2Nv5P/eK8vQqgW+G4Hp
EZg2Bm0aoMNo3JQxPZzDhTUYNQI//pj9FVwCfvUw3OD9ESOxLGskWComNUDZ
APh4w8cXfn7w9YG3L0qURfsF8o2TIAiC+EJJv4FqKgSORar++1fmoGhRhI9H
+xbY9tgxYyMIgpAfNR7FIEHICf/+MS7fQILtEsrS8Pw+Lp7DtRh8kNAd2zw4
RM9H/37o21fqq19//HZI7mEQBEEQXzEv7uG10AKX+AxX/sVb2dc+giAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIQlb+D5JIlyM=
    "], {{0, 69.00354601555912}, {526.527057640462, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{143.9926, 143.9926},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{526.527057640462, 69.00354601555912},
  PlotRange->{{0, 526.527057640462}, {0, 69.00354601555912}}]], "Text",
 CellChangeTimes->{
  3.901812553494212*^9},ExpressionUUID->"ef0eb815-bd21-4703-976b-\
cdc7c482dc4f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"staggeredGamma", "[", 
    RowBox[{"L_", ",", "mu_", ",", "boundary_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"onesetTermStaggered", "[", 
       RowBox[{"mu", ",", "s", ",", "L", ",", "1", ",", 
        RowBox[{"etalst", "[", 
         RowBox[{"[", 
          RowBox[{"mu", "+", "1"}], "]"}], "]"}], ",", "boundary"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"staggeredGammaNum", "[", 
    RowBox[{"L_", ",", "mu_", ",", "boundary_"}], "]"}], ":=", 
   RowBox[{"0.5", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"onesetTermStaggered", "[", 
       RowBox[{"mu", ",", "s", ",", "L", ",", "1.0", ",", 
        RowBox[{"etalst", "[", 
         RowBox[{"[", 
          RowBox[{"mu", "+", "1"}], "]"}], "]"}], ",", "boundary"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.901812614977562*^9, 3.9018126688583803`*^9}, {
  3.901812735288637*^9, 3.901812746835517*^9}, {3.901812883272913*^9, 
  3.901812908527543*^9}, {3.901840615123339*^9, 3.901840619468296*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"ae15c97e-4bdc-47f8-9b42-9b35e56c25ac"],

Cell[BoxData[{
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
gvh/lvZ6+Q==
    "], {{0, 59.003032100260704`}, {585.5300897407227, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{143.9926, 143.9926},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{564.5, Automatic},
  ImageSizeRaw->{585.5300897407227, 59.003032100260704`},
  PlotRange->{{0, 585.5300897407227}, {
    0, 59.003032100260704`}}], "\[IndentingNewLine]", 
 RowBox[{"Notice", " ", "that", " ", "is", " ", 
  "\"\<I sigmaij\>\""}]}], "Text",
 CellChangeTimes->{
  3.901812730904902*^9, {3.9018911927923164`*^9, 
   3.9018912149956865`*^9}},ExpressionUUID->"ac2f7e9c-3086-4fb0-8981-\
ed4b3a0e24be"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"staggeredSigma", "[", 
     RowBox[{"L_", ",", "mu_", ",", "nu_", ",", "boundary_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "etafunc", ",", "deltaListOrignal", ",", "allDelta", ",", "tmpDelta"}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"etafunc", "[", "x_", "]"}], ":=", 
        RowBox[{
         RowBox[{"eta", "[", 
          RowBox[{"x", ",", 
           RowBox[{"mu", "+", "1"}]}], "]"}], 
         RowBox[{"eta", "[", 
          RowBox[{"x", ",", 
           RowBox[{"nu", "+", "1"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"deltaListOrignal", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"allDelta", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tmpDelta", "=", "deltaListOrignal"}], ";", 
             RowBox[{
              RowBox[{"tmpDelta", "[", 
               RowBox[{"[", 
                RowBox[{"mu", "+", "1"}], "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{"tmpDelta", "[", 
                RowBox[{"[", 
                 RowBox[{"mu", "+", "1"}], "]"}], "]"}], "+", "smu"}]}], ";", 
             RowBox[{
              RowBox[{"tmpDelta", "[", 
               RowBox[{"[", 
                RowBox[{"nu", "+", "1"}], "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{"tmpDelta", "[", 
                RowBox[{"[", 
                 RowBox[{"nu", "+", "1"}], "]"}], "]"}], "+", "snu"}]}], ";", 
             "tmpDelta"}], ",", 
            RowBox[{"{", 
             RowBox[{"smu", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"snu", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
          "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["I", "4"]}], 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"offsetTermStaggered", "[", 
            RowBox[{
             RowBox[{"allDelta", "[", 
              RowBox[{"[", "k", "]"}], "]"}], ",", "L", ",", "1", ",", 
             "etafunc", ",", "boundary"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", 
             RowBox[{"Length", "[", "allDelta", "]"}]}], "}"}]}], "]"}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"staggeredSigmaNum", "[", 
    RowBox[{"L_", ",", "mu_", ",", "nu_", ",", "boundary_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "etafunc", ",", "deltaListOrignal", ",", "allDelta", ",", "tmpDelta"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"etafunc", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"eta", "[", 
         RowBox[{"x", ",", 
          RowBox[{"mu", "+", "1"}]}], "]"}], 
        RowBox[{"eta", "[", 
         RowBox[{"x", ",", 
          RowBox[{"nu", "+", "1"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"deltaListOrignal", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"allDelta", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"tmpDelta", "=", "deltaListOrignal"}], ";", 
            RowBox[{
             RowBox[{"tmpDelta", "[", 
              RowBox[{"[", 
               RowBox[{"mu", "+", "1"}], "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"tmpDelta", "[", 
               RowBox[{"[", 
                RowBox[{"mu", "+", "1"}], "]"}], "]"}], "+", "smu"}]}], ";", 
            RowBox[{
             RowBox[{"tmpDelta", "[", 
              RowBox[{"[", 
               RowBox[{"nu", "+", "1"}], "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"tmpDelta", "[", 
               RowBox[{"[", 
                RowBox[{"nu", "+", "1"}], "]"}], "]"}], "+", "snu"}]}], ";", 
            "tmpDelta"}], ",", 
           RowBox[{"{", 
            RowBox[{"smu", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"snu", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
         "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"-", "0.25"}], " ", "I", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"offsetTermStaggered", "[", 
           RowBox[{
            RowBox[{"allDelta", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", "L", ",", "1.0", ",", 
            "etafunc", ",", "boundary"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Length", "[", "allDelta", "]"}]}], "}"}]}], "]"}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9018127580345135`*^9, 3.901812795553867*^9}, {
   3.901812859801339*^9, 3.9018128737456903`*^9}, {3.901812916473322*^9, 
   3.901813027006366*^9}, {3.901813071275298*^9, 3.9018130862986*^9}, {
   3.9018131957007246`*^9, 3.901813292808263*^9}, {3.9018134517664413`*^9, 
   3.901813471305992*^9}, {3.9018406320801864`*^9, 3.9018406366625443`*^9}, {
   3.901840687138693*^9, 3.9018407414002085`*^9}, {3.901841068045558*^9, 
   3.901841070189294*^9}, {3.9018452141555967`*^9, 3.9018452165074463`*^9}, {
   3.9018912271421423`*^9, 3.9018912319004416`*^9}, 3.9020775730281596`*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"623ad2c9-5006-4b04-b66b-e6bf8406ec9a"],

Cell[BoxData[{
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
bCe5zN4r/IlORq/IOOBpb+BIa5nzRoN7fYijCUPH2ci/WpPK7tMqaP6BMe1k
jgsvwFirHgblrwV9n7F5EHEwv/uh/Eom9yg3sjZEVUNeV93fOdrZOzRTr7dR
mbZ1SFtErBi0MZViAYf/scxA6po6SpPnfy4RiW2nxr6hSZX8l7oFU3Z8ihUx
/fX9rnoPRmEldw79MnKIx+ItByKiQgNW/exib9t3WuBlveNc0ewt35kZehUB
ophynHK9Up253aWt1ei9LO7UxN4mzf1C7jArnqv3dTcrKOSvurxmUPeu9rYK
y3YKK5v27a2tFJaWVh0cuvb4cUcadansy9owVSm8Lr21XzlyoOvkRX9s3Rse
fXTvuql9rVp3HrUiivZdjnyPZQqnP15y8peeXTpZW1oSgtsQeis6du7hE0ax
i4TvUrdcqlIWdSGmv3obeoZJXfzo37NR+wJ3hR6/cCe3pNGfCaxMDxrR3tb9
cD5L0pckL3Sy7L3sIpMXlwoPWvlNhWVZG6Yqrdeq12kXT0ceDAoIColJ+jfr
NcMJVl7HsjClbrmgTwIGywweMcYN2Kv/KZ06fr/tLs1+QhNAn8XNcOw0Zk9W
kx/+xE/YlJ89WRuqKote8zeWhSl1S6YyI8JvlnJLsjEnMjU+FZmHvJy+nBFH
epq9yby7vm7g58P8rxRBe20IduVnRdZGUJVVr/kay8KUGmAfdV78ap+15xpv
n5E6PdhXGXIPVjaalMaWtVmoKsxYFqTUAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAgHCoyDmxee+VskYrT50VteXgzSKs0QoUAI2sQfOQQJiB
J0ipgUYHK7mxdbTTkPU3G+8G0mjQgpgZvZ0XxheoG7HQlgsbGvBeAmEGniCl
BligMn3XyE7dZp543uhtdvnd7a52fZdfLIbeAA2sacBnCYQZeIKUGmh8sKJz
i3oq+qy+/p6V4tGCvzw72bkfeqRipfiWAbsa8FQCYQaeIKUGWAB7HjWpk0Wv
ldfYuX+0VRQcmWBrOSQgC0Zy5LCvAQ8lEGbgCVJqgAWwwhPT7WSfTj9VzGo1
qgfrnS1sxoXmo6xW0zzhRgOeSSDMwBOk1AAbVKX+1ktu3n9jOustdHHs5E9k
n/18GlbA68KZBnySQJiBJ0ipARbAiqK9bCRtfwh5wYHC5efnO0jkzuvTYByn
C5ca8EYCYQaeIKUG2AB7cdCtrVjhcfQNJ22z6tryblJJ5wUXK7iorZnArQY8
kUCYgSdIqQE2QJ8EDjVH2owL4+YG0mgqz8/7TCKxm5PI3rpUc4NrDXghgTAD
T5BSA2yA5u4cIkdkgwOecLaY8f6Ej7VY4rDgYhVXNfIc7jXggQTCDDxBSt1i
eJ8Z66+c5Omt/OPwjcJaAdWFt2J2rl0828vdc9q8ldvj0ko5aZZLIidaItJu
y69RbwAty4j5YPTNNzpGv74VG7zeT+k9wWOq0m/LsftvGRhNhK9MJPtmPfuL
Uw2FG62YacCdBJx4zbfAE6bUAGPQxwfH9fph09/3bkX7Oslkjr7xrzANVnx9
x6RvB3qt/m/U36k5j9MSt4y1k5rZT9iXyXpLWUWMpxCLsYeptimheWGevXGj
09JPKHGju87532vC6Gs7pwwc5PX7ocTU7Lzc9OSdEzvL5J+6Bd2nnVarurjA
Aa909IFXvF755korJhpwJwFHXvMr8IQhtalWAzilZ3x7TQzXBk5lwmxbsUja
fWXimaVDhvsl5OvEgzpzo7NMJFZ4Hi1kN7mhT3e4yETSrsuoegElJ2d0/2D0
Wa3RPVYmJfgNc1EeSdc5ewHNCxomRxDLsSF0D/aieYF4R0BiP/+CsfeAqqKs
7J3plJVVMO96cKUVEw24k4Ajr/kVeAKR2iSbAQKs8C/PHsqk6gWD99ET2yAi
RKz4pJ8y/nWdr788aqIFIhJ3UiZVsmpR1eX/6ywRUU+9FUd7965vdJ8Zsc/q
GF0ZP91aLBJbTz9NZ3R57CRLBDGn7nLVs/X8AgcZImoYiNzJ7x8mDwdzpxUD
DTiTgDOv+RR4gpHaJJsBgrdRPznOOF0ti+rfX52keCqROs5PLq17IVYQ/L1c
JBLbzIhnN3WXhrtbIIjFhKOGTy4riZ7Uta7Rsi+XXH5X78q3YePM8Uiz9I6j
G8RVXVn8OR7CfdbdN2b+7V12ctThkJCDphMSEhZ98RGjtXbutKLXgDsJOPOa
T4EnGKlNshnAqUpZ/M3k6Lfaf6OPtw+S4VGgcA97WX/AU3nWt4NYJJJ+9dtt
Vo+PwZ4FD5fjRvicMhiKVSlL6hqNWI47TDJLrbq65AsJM6NVt1b3kIokXRal
8HXZmzut6DXgTgLOvOZT4AlHalNsBrSg5e8rakQoOjKeGAuZj9xHEiLqu3/0
IgKow6yE6hYVzT/uv3xzaMKtgjK0uqDC3LSU2MBV/nG59YZe6sK7cYF/LFX6
eE2aMe9X/70JWQYXxdGHW76T4fX4njXciyAx2nV33dEbUW26fz/C6I6zE2hX
TtTp67/B6+04h+X5oAZgsla6ZRRe27Vo2dEcyqEFAw24k6BBXqOFt+N2b/hV
OdV7+rwV64Oirr8wmFR4FXiNIXU12Ivjc5xHbDX07GJTS013IcCAioRZRPtN
vmVHOy7DRWsz/khR9SeqGyuIoRPeBCNSszaWrWQIQnQN+i8/W+dhWvXT6DlD
hvtui0m5/7SorPRZauTibxUyK+dFp5+Rza6h2Zv7M0+hH4zu509iNJobONQM
N7rdxMi3tCXVrPfYzk7gbequxVitXmVcPRcfE7p92U/OHeWIxO6XZMqhhVEa
cCeBsV4/OrbQdeD45cFx5/9JORuxa8U4RwtJ224/rkt63owCz0in61ry9NB4
W7HkiyVXDTRZTS01faUAHTWpWPI56YxBafRP7XBZdFYz8Ou7K2ztrMwlxKqF
mcK+z5gFuy/m1w0ANCfAxdL+x60pOssr6JOdQ8wRpM3gbRkk0ZgfNExOLHUw
mbujNBrNCx5ugWhHd3XXdkhQ31vbRyaSOCy8xNcJk1qM1Ap7Hf/75MmzlmwM
TbwRNNZMRJu6jdGAOwmM87o81X/ooOWXdE85woouLO6JdzFaOa9Lrd8v5Gfg
GXtb6v9xZtAPdm2kCEXqbmqpaa8E6EAfbxtIjHZsfE6SLJlp936KRNLuq25+
CAFcx36Tois0WEXxy9dlBsffFSenKvDuuHzEXp3hXtWF+fZ4cWZuh0i2cxSH
jjXDby/PKPqlO0qj0cc7XIhegMIjnMkDvqrrft2kImmPValGzRlWFuflZGSk
m05GRk7+W+NaC6O1qqUi0oNB6jZCA+4kMM7roqOe1g6jVsdk6eVorCjG+xMx
PjicGFm/l8rHwGuA1JqK2xvGjN/6Hzy5U6Tuppaa/lKAGuxN2LjWxCzWqP1k
M2r31vXRzmL5Jn68Ez6kbrqC317fPW/q7E1/686O4J0FSwTPIHPPkWSQqnNz
7SQi+bCgfLoQoDQazf7Pt/hYUmz1U1RN+4AVpZ5JMVhY9cYmueseEv8N/5F2
x21DMbKrb7xWtTBM3Yw14E4C47xWp/l/Tfz8ySz9aQjs+W5XOZ7sHJdeNd1p
7rxugNTvrqwa4RX69P3xydSpm1WpCwwV9tFp6joBesrPUM2oPfuvK9Gitp0Q
XttLZpi6ScCeh7lbixGzr9fdIUsgeBQMkImkX668Qdf9pTJanbHBWYbHko13
bElNuY8Cvh+w1qBRbw6OlhOTbxSLVCSoXmdcSU5KSjSdpKTkq1lvjNmQaLxW
tTBM3Yw14E4CI72uvBvsNaC/2++J+qN3NC9wKJ7tiMe+6xXCw8AzVWqsKHGh
68zYF5imgi51syr1PQNl1TpNXSdAS812Tbz7R3YiTOkxLwUeInKXHU9ru87a
1B2RfzN0hY/HePcJEzy8Zi7ZFv+QLpdjJXf3ejpIzbv6hD8ykD7KT023ESOt
PSLqbWJlbjSas+VbIpZsp52sKUWducnFZXOmwcKu++GFyQZtf8z393eYoFUt
DFM3Uw24k6BBXn8EKwz3UIjxL2DOWZJtzLwLPBOdxl7EzXSdf1Y7zU+bulmV
2lCPpNZpyjoBWtBH1bNYVt6x9ffZEwcOEDPT0p5rbunoTyxT2ji6LTt6p7rL
iBXd2Dqqg3W/eTGPyaLk/Y19i32nuLv2tbNo22tORJbhxx402Mv9o8wRYnco
9Q42KqOrh4FIO69j1b/DiuJn9al5lpeU4sNjLRCpk991vr/z1BStamGauplp
wJ0EDfP643X3/J3NELFi9D7SVT2+BZ5pTqO5Yd4jV6bU/AV96uab1IAxlEZ6
tsXbbwvyGbUHf/YlRPtU/1Fb7OW5g+F39VpqrGDf6Dbi1t9tfkCiSGXx8/y8
3Ozb5yP8Pbpa2w1ShtwnicfqGomJSsRsxB7KoxAojUZzd7u2QT6shatyY2f2
dwvONhyblUTwiW2mn+L9EcKmaFUL09TNTAPuJGiY19W8u7rq61Zii57zzxha
zuBZ4JnitCoreILbhlsfB7/0qZtvUgNGUL3JEmnrGkzSGcGe7xmhfbrVM4J2
uyb6EB84icSdZieUU16Wd8BNIRa3G/Dnv+TXqa4t7yoVW02OM5Tc6YzWEJOd
gWPsWnX5we/PX6cPH+D250WqhW/17d++koptJh1j902yjUADtWKcuplowJ0E
DY9Q1dPIKV3k7QevOfeSYkqFV4FngtMVdza5jQ/M0EnTDFI3v6QGjAIrzT53
IjG9mOzrfhfrrRCLEPnQwDw90TAUrX95yeGxZiIGO+wq/taOsMydNzwg/b3q
xsovpeIOM+Kp5lUojK654m3O5ZMRkaf/eUxzoLE6Aw9MyaezEyiq4wumaFUL
89TNRAPuJGiY16onkdO6KZx8DmdQdik0PAs8Y51+98+aUV6h+hPfTFI3v6QG
GomqSws7S0QiWa/f79QOgLA38UpHi9bd5sbXea/z+wgPvCsg6fx/l2tSQ1Xu
+T2bAmLqHsBefegjXqzLDvJq0Zztg8zFttNPUXR/Gg31vbW9Zfhw73IzeI6S
ClKt9DEidXOqQQMkoPO66lH4VCd7V/9LH09FxQofXHnwhry0ZhJ4JE5jL/eP
Vtg7u47Qw7VPR+IhJIf+xOejlYcfkrZuzURqwAjUadpzCYgt2DrfdPU8G2Ix
dKf+sjhWsGuYXHvEQUH1bVIWM6kdgkdYn7X39G6rmt39iNx1t4GKsaLTP38m
VYwNITksoZEpv7TIUdraJSCb73tLaCDXSh9jUjeHGjRAAmqvq3LCvHt9Myfq
oe7visM8hm3KMlBeswg8UqfVpS+ePK7Dw6SlPYmnFmfHZOM/PSkoNqB7s5Aa
MALsxb6R5tpzCaJKdD8vT1J2+27V5Vf63RzsTeREa7HYZsKRDwselQmzbMXi
Vk5z4/Xnvt6d9GmPD/dauQQ8NFg3mh86zkb+1ZpUdh9MR/MPjGknc1x4obkP
3wxppYdRqZsrDRoiAZXXlVmhUwa7b7v+cZSPqcqKX+bd3+/ZbdpJw1Mn/A88
RlJrqc7xdBMm1ebwXWrAGMqOT7EiZtS+31XnWSv0WeRUF5+/snW2caty42Y7
yWX2XuFPajN61f2do529QzP1bpTKtK1D2iJixaCNqZRzj+rM7S5trUbvZXGr
NfY2ae4XcodZ8Vy9Apw9DGpVC/o+Y/Mg4p0q7ofyK5k5zL4GDZPAoNcVGQc8
7Q28BkPmvNHglmMCvgceA6mrQUuT538uEYltp8a+ofWF71IDRlCVsqgLMaPW
u858BwFWcufQLyOHeCzeciAiKjRg1c8u9rZ9pwVerneqZumt/cqRA10nL/pj
697w6KN7103ta9W686gVUQzehlqZHjSiva374XyWoqkkeaGTZe9lF5m8C5Xn
UGlVdXnNoO5d7W0Vlu0UVjbt21tbKSwtrTo4dO3xo4G1Bh1Y1qBhEhjyGs3e
8p2ZodcXIYopx2nWK3kdeFRSf6Ds5C89u3SytrQkBLch9FZ07NzDJ4xy2yOv
pQaMAH0SMFhm8NQyAnXxo3/PRu0L3BV6/MKd3BLDPRnV67SLpyMPBgUEhcQk
/Zv1mvESBfbqf0qnjt9vu0u3N8B40GdxMxw7jdmTxf+jAumh18p02NOgoRKw
6DV/A0+YUgNGUZkR4TdLuSXZmBOZGp+KzENeTl/OiCM93ttk3l1fN/DzYf5X
ilpIF4BdrVjRoBEkYNVrvgaeMKUGmiXqvPjVPmvPNd7WJXV6sK8y5B4sljCn
sTVoFhIIM/AEKTUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAEKiIufE5r1XyhqtPHVW1JaDN4uwRisQMIVGlrV5qCrMWBak1EIHK7mx
dbTTkPU3Gy/aNRq0IGZGb+eF8QXqRiwUMAI2ZOW9qsKMZUFKDVSm7xrZqdvM
E88bvYEtv7vd1a7v8ovF0HRzD2uy8llVYcayIKUWPFjRuUU9FX1WX3/PSvFo
wV+enezcDz1SsVI8YAB2ZeWpqsKMZUFKDWDPoyZ1sui18ho7wa6touDIBFvL
IQFZMOziDPZl5aGqwoxlQUoNYIUnptvJPp1+qpjValQP1jtb2IwLzUdZrQao
gRtZeaaqMGNZkFIDmqrU33rJzftvTGe9OS2OnfyJ7LOfT8NyNQdwJiufVBVm
LAtSagArivaykbT9IeQFB3KUn5/vIJE7r0+DQRfLcCkrb1QVZiwLUmpAg704
6NZWrPA4+oaThlR1bXk3qaTzgosVXNQmXLiVlSeqCjOWBSk1oEGfBA41R9qM
C+Mm2jWayvPzPpNI7OYksreIBHAuKy9UFWYsC1JqQIPm7hwiR2SDA55wtvLw
/oSPtVjisOBiFVc1Cg/uZeWBqsKMZUFK3TS8z4z1V07y9Fb+cfhGYe23rS68
FbNz7eLZXu6e0+at3B6XVspJG1oSOdESkXZbfo16t2ZZRswHo2++0TH69a3Y
4PV+Su8JHlOVfluO3X/LwGgi1mQi2Tfr2V9J4iHcyM9MVu5U5cRrvsWyMKVu
qaCPD47r9cOmv+/divZ1kskcfeNfYRqs+PqOSd8O9Fr936i/U3MepyVuGWsn
NbOfsC+T9Watihj8IBZjD1PtKULzwjx740anpZ9Q4kZ3nfO/14TR13ZOGTjI
6/dDianZebnpyTsndpbJP3ULuk87B1Z1cYEDXunoA6+EtkzNlfxMZGVP1Sby
uoljuWmcbmKphXMDl57x7TUxXOtwZcJsW7FI2n1l4pmlQ4b7JeTriKfO3Ogs
E4kVnkcL2f1u0Kc7XGQiaddlVE12yckZ3T8YfVZrdI+VSQl+w1yUR9J1DkpA
84KGyRHEcmwI3VO4aF4g3mpL7OdfMDZgVRVlZe9Mp6ysokn7CVzJz0RWFlWt
8wuOvG7qWNb/XCBSC2XKBCv8y7OHMql6dv999MQ2iAgRKz7pp4x/Xee7Ko+a
aIGIxJ2USZWsWlR1+f86S0TU82TF0d696xvdZ0bsszpGV8ZPtxaLxNbTT9MZ
XR47yRJBzKn7R/VsPb/AQYaIGgYid/L7p4me5OVOfgaysqmq3qeced3Usaz7
oWCkZvexJ/7wNuonxxmnq79D1b+/OknxVCJ1nJ9cWvdCrCD4e7lIJLaZEc9u
6i4Nd7dAEIsJRw0fM1YSPalrXaNlXy65/K7elW/DxpnjYWHpHUc34qq6svhz
PN76rLtvTCf4XXZy1OGQkIOmExISFn3xUVMtjHMnP72srKqq//dced3Usaz3
50KR+r5JRjc7qlIWfzM5+q323+jj7YNkuGQK97CX9UcnlWd9O4hFIulXv93W
9hDR/OP+yzeHJtwqKNO2rWh5YW5aSmzgKv+4XOplZezF8TnOI7Ya2D+PPQse
LseN8DllMG6qUpbUNRqxHHeYZJJLdXXJFxIdoylQ3VrdQyqSdFmUIpQBl6Yh
8uuAFl7btWjZ0RzKJo9eVnZV1a+pIV6jhbfjdm/4VTnVe/q8FeuDoq6/MGhE
k8dyozmtLrwbF/jHUqWP16QZ837135uQZXgds6mlTqG5sKWAlr+vqPnGio6M
JwYu5iP3keipvvtHL0LtDrMSqps/1Y0VRGOJf+mI1KyNZSsZghDB0H/5WerH
p9Cnh8bbiiVfLLlKrgX6cMt3Mrwe37OGm3wSo1131x1qEUan+/cjjO44O4F2
mUOdvv4bvN6Oc1ieD2ooaKZmwUTNqFGakSON/2+UZuxETUSOTmkmy/8q4+q5
+JjQ7ct+cu4oRyR2vyRTNnkMZGVVVbqaGHr96NhC14HjlwfHnf8n5WzErhXj
HC0kbbv9uC7pOVl3pcljuVGcVj+NnjNkuO+2mJT7T4vKSp+lRi7+ViGzcl50
+hlpH62ppU6iu7LFUZEwi2hsyffXaAdR+DfcZvyRoupP8NTdXWFrZ2UuIeap
zBT2fcYs2H0xnybvqTKDfrBrI0UoUnf25v7MU+gHo/v5kxiN5gYONcOtazcx
8i1tSTWLM7azE/iduiuSNU5tNAiiEYmM/w/RyNpp/C6TlmuU/Njr+N8nT561
ZGNo4o2gsWYi+tRtjKwsqEpTEyOvy1P9hw5afkn3qAys6MLinnivpZXzutT6
yaXJY5m6IkZOozkBLpb2P25N0ZkRR5/sHGKOIG0Gb8sgGWo1tdQJ9LW2LGp6
0ZLPSWcMSqN/aod/hzpLD/j1/SZFV2iwiuKXr8uYzQ9X3N4wZvzW/+BFGU7d
WH7QMDmxLsFkoo3SaDQveLgFoh2K1V2IIUF9b20fmUjisPCSgCZMajFW/loq
Ij0YpG5jZGVDVRNqqut10VFPa4dRq2Oy9HI0VhTj/YkYH29OjCyqW0CTx7Lx
FdWTuuLkVAU+npaP2KvTQ6+6MN9eIhKZuR0iWRNsaqkv0V7askAfbxtIDE1s
fE6SLJlpN2qKRNLuq25+SLgfUjdz3l1ZNcIr9On745OpUremOHSsGd6N8Yyi
X7qjNBp9vMOFaLIVHuFMnsZVXffrJhVJe6xKNWqzR2VxXk5GRrrpZGTk5L9t
8tbCaPlrYZa6jZCVFVWNr6mu1+o0/6+Jiz+ZpT8uw57vdpXjlzkurR/RTR3L
RldUX2rs7fXd86bO3vS37uwInt8tEVz0uefIRG9iqVPpr21JYG/CxrUmppxG
7Seb/rq3ro92ysk38WOuNjJ1Y0WJC11nxr7ANBU0qbvq3Fw7iUg+LCifTi9K
o9Hs/3yLD/zEVj9FFX8wIfWM4SWM6l1Ictc9JP4b/iPt9tiG0vRdfePlr4Vh
6mYsqymqFhgq7KOqRtdU3+vKu8FeA/q7/Z6o3wVE8wKH4teRPjvIbiyb5HVD
pP5QxPMwd2sxYvb1ujukmrMrtaE9ELU3MHWlLY3yM1TTX8/+60o0f20nhNeO
j7SpOyL/ZugKH4/x7hMmeHjNXLIt/iG54NiLuJmu889qZwnpUjcu2QCZSPrl
yht03V8qo9UZG5xluPA23rElNeU+Cvh+wFpDZWFvDo6WEzNlFCtKJKheZ1xJ
TkpKNJ2kpOSrWW+a+Old4+WvhWHqZiyrKareM1BWrarG1kTnde11heEeCjH+
Bcw5W38vHLuxbJLXDXUaK7m719NBat7VJ/yRAcXZldrArWLiDdzsqdlbiXf/
yI5vKT3mpcD1lLvseFrb5BHLlDaObsuO3qnOO1jRja2jOlj3mxfzuN7usdww
75ErU2o2bdKlbk35qek2YqS1R0S9HafMjUZztnxLCG877WRNKerMTS4umzMN
FnbdDy9MNmj7YwG+bMME+WthmLqZymqSqoZavlpVjayJ1usPVN3zdzZDxIrR
+0ifP2E1lk3x2mSn39/Yt9h3irtrXzuLtr3mRGRRvdy9aaUW1A2MPqqecrLy
jq2/KZ44HYBYk5D2XHNLJ9tiL88dDL+rpw1WsG90G3Hr7zY/0M3KqqzgCW4b
bn3sjtOmbuzl/lHmCLGVk7IvSml09ZgNaed1rPp3WFH8rD41D96SUnx4rAUi
dfK7LsAXlJoify1MUzczWblTtWFeV/Pu6qqvW4ktes4/Y2CajW+x3ACnK4uf
5+flZt8+H+Hv0dXabpAy5D5JEdUW8kzqFkxppGdbvLG1IJ/+evBnX+Ib/pT+
uVj0Id5UisSdZieUf/io4s4mt/GBGTrfJ23qrl4QQsxG7KE8t4DSaDR3t2sb
5MPCtSo3dmZ/t+Bsw4FUSUSK2Gb6KSGe99sw+Zmmbmaycqdqg4Ne9TRyShd5
+8Frzr003NHjWSw3zp2O5h1wU4jF7Qb8+W856QU8k7rlUr0jEmnrGkwy6MOe
7xmhfRTVM0JvbyWGovW/8JLDY81EOts03v2zZpRXqP7giz51Ey+96CoVW02O
M9Ss0xmtIRaVAsfYteryg9+fv04fPsDtz4tUq9Tq2799JRXbTDomlPMPdDFJ
/loYp24msnKnagO9Vj2JnNZN4eRzOIM8edVeyKdYbqDTtVT8re0UmztveECa
TnkldUsGK80+dyIxvZjsu3kX660QixD50MC8j98w9iZe6WjRutvc+Dpv8nwf
4YGLL+n8f5eJ+xgfN41W2Du7jtDDtU9H4hkGh/7E56OVhx+SCKe6sfJLqbjD
jHiKGTUqo2uueJtz+WRE5Ol/HtOcPqzOwKNI8unsBKoJvJaLsfLrwzx1M5GV
O1Ub4HXVo/CpTvau/pc+Hq2HFT648oA8t/Aqlo12uir3/J5NATF1z8yuPqdP
JJIZWgrgldTCpOrSws4SXKJev9+pbV6rR1aIxdCd+msCWMGuYXLtQ60F2q9a
XfriyeM6PExa2pPYOT87Jhv/6UlBMekdj+ZsH2Qutp1+iqKv0mio763tLcPH
ZpeFtTbNBFL59TEidXMqawNUpfS6KifMu9c3c6Ie6pZbHOYxbFMWeePWTGKZ
1OmymEntEPzDPnV2dtRsyEbkrrsNzIk0E6lbLuo07SECxOZ73a+lPEnZ7btV
l1/pBzb2JnKitVhsM+EIxRRXdYnUEyZEWUWnf/5MqhgbQnKyQSNTfmmRo7S1
S0C2oJamGWFAfj2MSd0cytoAVSm8rswKnTLYfdv1j11FTFVW/DLv/n7PbtNO
Gpo6aRaxTO50ZcIsW7G4ldPceP0hxbuTPu3xHnorlwCyQbOWZiF1ywV7sW+k
ufYQgagSvV+gzyKnuvj8la2zjVuVGzfbSS6z9wp/QrGujJYmz/9cIhLbTo19
Q/1No/mh42zkX61JZfdpFTT/wJh2MseFF2CsVQ+D8teCvs/YPIg4mN/9UH4l
k3uUG1kboqpBrysyDnjaGzieXea80eC+teYQy4acrrq/c7Szd2imXrNUmbZ1
SFtErBi0MZVqpp//Urdgyo5PsSKmv77fVe/BKKzkzqFfRg7xWLzlQERUaMCq
n13sbftOC7xs8AjMspO/9OzSydrSUmFl097GSoH/o2PnHj5hhnvo6sztLm2t
Ru9lcacm9jZp7hdyh1nxXL2vu1lBIX/V5TWDune1t1VYtiP0bG9NCGrVwaFr
jx93pFGXyr6sDVPVgNdo9pbvzAy9VgNRTDlOuV7J91imkLr01n7lyIGukxf9
sXVvePTRveum9rVq3XnUiij6F1jyXeqWS1XKoi7E9FdvQ88wqYsf/Xs2al/g
rtDjF+7kljT6M4GV6UEj2tu6H85nSfqS5IVOlr2XXWTy4lLhQSu/qbAsa8NU
ZctrXscyrdOq12kXT0ceDAoIColJ+jfrNdNZZV5L3XJBnwQMlhk8YowbsFf/
Uzp1/H7bXZo9WCaAPoub4dhpzJ6sJj/8iZ+wKT97sjZUVRa95m8sC1Pqlkxl
RoTfLOWWZGNOZGp8KjIPeTl9OSOO/GB3U3l3fd3Az4f5XymC9toQ7MrPiqyN
oCqrXvM1loUpNcA+6rz41T5rzzXePiN1erCvMuQerGw0KY0ta7NQVZixLEip
AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAABoTvw/yDht1w==
    "], {{0, 139.00714342264808`}, {244.51256522904646`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{143.9926, 143.9926},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{271.6281413072616, Automatic},
  ImageSizeRaw->{244.51256522904646`, 139.00714342264808`},
  PlotRange->{{0, 244.51256522904646`}, {
    0, 139.00714342264808`}}], "\[IndentingNewLine]", 
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQdwFGUbgNMudAi9hK4EpAsoIAoEqVJDkyYCARERASmWH0FRuoCI9F4E
BEEpgiMCAtIdqrTBEGDoQxvKJJnczfPf7l1ILrmyd9nLXeB9Zv9/cLO3++23
u+/3vt/3ljJ9Brd/LyggIGBYVvP/te/9SeTHH/f+rEOY+T86fTRsQP+P+vVt
8dHwfv37fVynT7B55xjz/xaFBAQo/0YQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEFI4tEpRvZl+x1ft0MQBEEQBEEQBEFwE9NDts+gWh4CDHx92tet
EQRBEARBEARBEDRgusn8L/noPTq9Renc5MlNYICYdYIgCIIgCIIgCJkG43kG
RtG1F59OZNNx/v6EEDHrBEEQBEEQBEEQMi0HxawTBEEQBEEQBEHIzIhZJwiC
IAiCIAiCkKkRs04QBEEQBEEQBCFTI2adIAiCIAiCIAhCpkbMOkEQBEEQBEEQ
hEyNmHWCIAiCIAiCIAiZGjHrBEEQBEEQBEEQMjVi1gmCIAiCIAiCIGRqxKwT
BEEQBEEQBEHI1IhZJwiCIAhCpuPnHoQEEhDgs61EXx75uhMEQRCekn6zTuRq
epDeEwRBEAQP2D4g9QAaXIDIpjT1aGscSb3aVK9MRFnCCxOWC4Or0TkojMXX
fd0LgiAISaTfrBO5mh6k9wRBEATBA0x3GBBBYIoRLTALQ3fodv7Eh5w/xtaf
GD+cqIaUyGNzLWULpM54jLpdUBAEIV2k36wTuZoepPcEQRAEwYLpKn1qMv64
1uMf7eXl7DaDmqEsv9z0TuOMnNvOF+/yQu7kkTSkHLvjvHM5QRCeV9yVhE/R
JbZO5Gp6kN4TBEEQBPMINa8VQcEM+suNHx2bQJ4gmzG0WAcueXOyMvE6cwdR
2jJwB9FljRevJQjCc4dHktCCXilTRK6mB+k9QRAE4Tnn1FTCcxLorjKTyJy3
CErphRJEkxnm3d7l/mE6qc42OSKJEZcXQRB0wkNJqKJbJkyRq+lBek8QBEF4
jnlyiKat+Ka9J8qM6QpvF7cNZ8jF2CPeaWjK695mfFOCDXx22OvXEgTheSA9
khBdCxyIXE0P0nuCIAiCLjw5w9czeeijqyf+y7g53Da585sHjGjE/P/4qbOH
ysztLUQYbJxeslZh1wO3z+M29xn1KiX6+Ky3BcF/OLOWmbt0OM+/K5izH7dE
yDNCuiXhnsFWs+6LYzo0R+RqepDe040nrP2aXZn0fvRuvCcqlhfQS9pb8JOb
8q3y/PySyIpx7L+t4UD/eE8ymHv7aBLBmP2+a4GRVT2oOYBLGj1OTGweQM/V
ihbnsTJjZvdIsqVM/hzIi9Hc8v7TN54jsjgLrnn9QoKgO4n2PtLEOPe9xUzs
G0/E6+zXY0Q0XqJHFQZs8LrTmn/hqSS8dYmYC5w8yu8raFlSXSEKJKITP+3k
+L9ciOHyHc8bJXI1PUjvpR/TPcY34fUxmVLZ9krj3VWxdEdXaW/F5zflD8qz
H3DrCPsu++C6l1ZRpSYbLrk6zg/ekwwm7gRvFqXnWl9PdD9mYiTVhnBHQzuu
riGyv9X6To9ZRxzfvGYTzmA+VccVGZHqed+nNBjv/csIevP4Ils3s/V3duxi
7z4OHeHwQf7ew84/2fYbm3dw91mdFIpn10walafvL0myIoH9i+nVmuplyRZM
cFZK1WLQTK5rE54nplG0HGuv6NbAx0eIDGfIdl+LsgzEQ0kYR7d8GELJloPc
eciXn8JFKFKI/HnJk5vs2Qg1UOK9dDRL5Gp6kN5LJ3FMe5NyPbmSGQWB9xrv
joqlO7pLeys+vSl/UZ59i4lp9ckXxQ1f9MKRiYRXY7vLSUifvicZjOk2AytS
dSSPHB+TeIuNs/komvZRdO3NZ1PYfsYrQ4zxEu2K0nqeWVt0elgMnd5kZ5Jf
SrrMOvPdnaVZAdvarPn54ayHZxOeef4aTbWKlC1JWGgKvSuIvOG8WIGazdjr
/PXNnNw7TO/q5CzHhJ3W5bBTK2hclqAgcodhCLJZXCjSmEOupmRvb6ViGCP3
6tzOS4spGs68czqf1j/RVxLqi8jV9CC95zkmtg4krCp7neg0fouXG69RxdId
L0l7C766KS3K83PC6Qlkz8LHf/nCvDWyuB3hrTnn6vH76j3JaEys6Ei2yuxx
9F6a2P8dVQtQsRkDP+WrUfRsQl4DgSFUjGKr7hMvZq1sEYVyM+lfx0ckML0N
Xx5M3pF+ZebyCsKDbcbQ3K/xjxTxEZzycB0Fgqwa19Rjz/J83ZEZlM3Oy9Ec
s1gQD5nbndzZeXsap9TSWol32TaT1wonZXsIpFQfZ9Nipit0LErl4V4YEE0s
akPu1/n3mXe38IIk1BeRq+lBes8zrqygaDaG7/F1OzwiAxrvWsXSGy9K+yQy
/qZcK8/PBg9Y+Bn9+9G3r9OtuyKsgvIxercP2mi6RJtCvD7JdfyFD96TDOfm
WsINdP/Z4QE7P6XAi/xwyGZt7tp26udX66WGM+uU3m1KYExN8rck1sFy4OGx
tPrWxtzWQZkxsTEag204Q7URZECcupB5ufoDWdV3pkDXTBnBoYlENn2szOQ0
ncg9i5n2hCmNCDIQ/UvqJfvE/+ha1mrZBYYy+qiDc5pY2x1DMX5OR/SWExKO
UTMbLednhNOaD/GKJNQXkavpQXrPfUw36R5Ose54R7R4lwxqvCsVS2e8LO2t
ZPBNaVCenw2Ml4iuTUQE5co524rlVsZ986AftdA37Tw2hmz5mR/r6rgMf08y
mng+rUzWWpxwYOLe20SZosy25850cx3F1YnELJXY/Vjndt1ZTUED76y3s/zx
YDeNO/Cf7RPRR5l5wLAqtpmlDfTb7BdLMPE7KWM7bWt3y/O2rxvqD5iI2c3E
YfRoT2RdXoukfQ9GTGZvrP6XWtNZjX8JpPk8X78nJjZ9xmcb9W6GWbF8j6zB
NJ5mNuase37uTWggVYfbt2Tv/8GLSXn8Xhpp39sh/gCVQ6n1lRdzm6zujKE4
6zXkyMqkeFES6osfy9VMgPSemxz4lNCsfHXC1+3wiAxrvBMVKzXxfFjGte4R
mMfxCbwv7S24cVPpx5Xy7Bu8pAa44vJ6KucgZwW+3e27qdQ7dC5I8Xdcp7vM
0Pckw7m9kvzBNJ/r4O6MTHmDV8Y6+BiNjKttTZ7WaIbej/Ix/UsSWpPjqa5t
YlYTStSkUSObrWoRAgMpWUv5d5NoznramidHqJvLRlgFh/OjFxxN3SaO2Auc
P+9i+++Gr9vpW56wZSyVclP4FaKHMHkOG3eybzfrF/N5f2oVJqwak/7Qz606
ng9Kqe+JgW/O6HVST0lg8IuU+dDcKD05+DVhQZTvz80kGXHue/IGkbUGB584
+I2RaQ2simhoAy6lFS4mVnYgOBdzr+raVlse/07JYGqOeUazYnpZEuqL/8rV
zID0nnZMt+mQn1zNuZoJNbYMbbwjFcset2Jd6x4X/nPw4wyR9lbcual04kJ5
9hXeUQOcY4yhaRj56rPf124Ev/cnOJQxx10dl4HvSUZjYk4zgsJYesvB36/Q
KCshWSkTyW/27IUTYzBYqupE2lPe0seeIYQE8/721PvvX00jUs7yUUUCgum1
ShUvl9L1Sp+ZQb4gmzG0QHPOPXtP/5nj7l6aFKVKdzb860DSmji1gaiyFGvN
wfs6XDHxOC+ry1Ih5djj8xDcBGVOtfRAPeX51dWUNGAoz44kcW2MpVUB9Vv7
1dkPY6cqy3mK/lmSP9M0yHSVZrkIa+vlhO0JDClHcCm2OzI/MzneloT6InI1
PUjvaeTqHHIF0Xapnynb2sjgxjtSsfQlg6R9EhlzUy6VZ5/hBTXAJabbTP6Y
XX7gGJOwh3IhlHofl2N+Br0nGY7xAm9kJWdLh59bwj4iQqz+/LXH21mPe7yK
nEnK23a9X6O43xUnz/A+GmJsExn9sqLM6ON6ZGRZe4JTOhgE8fp4JE7dnzm7
lLJFGb1dw6rxY5b2IW85VsWk96JXZ1oD6wq+g95uyO6jtzw3XaZ9UeWz6p3C
gvu1l/Jp5HidM047On6X1Wc4KB/r03w5F75V+q3lQq9rL7+/R3AwfTZ7+TL+
g76SUF9ErqYH6T0tGPn2DQJzstDflG0tZHjj3VCx0kGGSXsLGXNTLpVnn+EL
s86PiOO94oozw2ZXjz9j3pOMJ2aKMqP+2iSHmrAxhgbZrGZd4x/sfJVx6whT
1dqgAvyi+wDziK75NBmMxvv0L6MMc11W6+MLarpJ77K24QzZ+CRzptV6Hriz
lRezkb0iu+5pOv7GJsrlIEcFdqZvzW51J2tgXYv5fjA5rLc83xytqJFZa3Mq
aVHAPJY1zEH2csw96eK3xrO8qq5jBhVkYyrJYGTK60p80KQLOjXUMY/WKmsc
Jd9/XsY43SWhvohcTQ/Sey4xayyvh2J4jQt++Pa7wgeN16xieU4GSnsrGXBT
GpRnn/Gcm3WwtitBWpbhMuQ9yXiWRylFCoY4HRfO/UT3NvQdx3/2fMyuzCBU
HV9CKnLQsRNa7C6++ohObej8HiuPalaAVYEQYGCM4/Dhh+uoWJp8uQnLS4H8
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
F6VKAz76jqvazd1EPq2kGGs/unr8PrcvvEUCw8sTVJgND71y+gex/L6ahWs4
bdtxt06xdilr97rIxXHyK8V312VJQS/xcD918yhzcY2+9ShniN7cv8jWVSxb
xxnVp/23aLWUVTX3yweo0UZRaRIOm24R/QI5yrEhVdaGR7TNqoi7DzQbQahO
y2GOXaAtgXX9ttnsvKYG1tktRaqRI99RKBs95jjLlRR/he/fIU9J5p309DIe
odvjc4LXMhvfPsm80bzTgTff4I0mvN2bEWPZeNTzC1kq2xbugUvBky4ZomoL
ZvVjo3fkmzdIp8z0kIf8tZbJ/6NnZ/p8xMQ5HNaSJMezS/mZXM1cSO+5ZN9w
xYjo4aRQmonTW9l8wr5poIxNAYS+wUVj8vEbosmWg74bUv9kWVvFwCn1gc1O
S2BdeD+bVBKmazTJ5qAmtX6Nt3D3DOuWsX43912ZCRpVrAuLFe16X9Jwfn6i
sphiVgl6a8tDpUXa3z/N2s3Osrma7rJjHcvXc95VJKnGm0q8QMcqfJnkHWE8
T91QtY5Mb22rkBqUZ9N9tq7lhBOzwcSZHSxbzu7zfl237sEldv/GsgUs+4nt
h3jgNGYt8Ziy6JztDRehbYqjciDt0864xhEdTlBBNjzGeJ9t31A0mKJRxGqr
QWVZHSjWy7Vq4Vv7wqucmUhWLeuVGY9ayym4DDt8UavJGEOnkkqSsYoD/DKM
JUGZkTCLoBKOHfUdYX7ta2Rj1NE0+1Xnk8BsTLGNATddUsqkBmZlhuMkyWnO
pVTaqjbKgYGmBtYF5mSpbcz1T28rtt77asT0+ZUsdeJl4ZiH//JJM3Lko/0I
ftrBVXV53fiQMwf5eTGD3iJHNlo7mWjKGNLx+JyfdlBZLxas0RMjE+sq0eI/
u+9wq53Ef6hiULxcnslyb3rx7zLqlqZhHyXP2Jbf+XE2wztTMC9tPuVfvb1T
/F2u+jfSe1ownqFuVgp1d5FXwT7msamUIpkrf5Zi8Erki2rKWtIbtnmbzYr4
tPrqGtMMm3NY9NW2S212PvxJ8ZstoUZSmy2I8bZ/1afx7qJNxbqxmZo12Zgi
5ktJzJJkAWmSEBki7a1ouynTDT6oyfsbUxhTSYlZgouxSZvc81Pl2ddqwO7B
hATSaqHSt4mnGbvE3kFJjsppvZUSD1PZkKJiXQJDyiXXc0w8wYSfnFUZ/ud/
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
    "], {{0, 63.50326336214499}, {590.5303466983719, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{143.9926, 143.9926},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{497.5, Automatic},
  ImageSizeRaw->{590.5303466983719, 63.50326336214499},
  PlotRange->{{0, 590.5303466983719}, {
    0, 63.50326336214499}}], "\[IndentingNewLine]"}], "Text",
 CellChangeTimes->{{3.901840796490562*^9, 
  3.901840849101964*^9}},ExpressionUUID->"803e19cd-2ec1-4e31-9e6e-\
3062b68a2986"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"mu", " ", "=", " ", "1"}], ",", " ", "2", ",", " ", "3", ",", 
    " ", "4"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"staggeredGamma5I", "[", 
      RowBox[{"L_", ",", "mu_", ",", "boundary_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "eta51", ",", "eta52", ",", "eta53", ",", "eta54", ",", "etas", ",", 
         "deltaListOrignal", ",", "allDelta", ",", "tmpmu", ",", "tmpDelta"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"eta51", "[", "x_", "]"}], ":=", 
         RowBox[{
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "2"}], "]"}], 
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "3"}], "]"}], 
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "4"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"eta52", "[", "x_", "]"}], ":=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"eta", "[", 
            RowBox[{"x", ",", "1"}], "]"}]}], 
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "3"}], "]"}], 
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "4"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"eta53", "[", "x_", "]"}], ":=", 
         RowBox[{
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "1"}], "]"}], 
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "2"}], "]"}], 
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "4"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"eta54", "[", "x_", "]"}], ":=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"eta", "[", 
            RowBox[{"x", ",", "1"}], "]"}]}], 
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "2"}], "]"}], 
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "3"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"etas", "=", 
         RowBox[{"{", 
          RowBox[{"eta51", ",", "eta52", ",", "eta53", ",", "eta54"}], 
          "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"deltaListOrignal", "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmpmu", "=", 
         RowBox[{"Drop", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
           RowBox[{"{", "mu", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"allDelta", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"tmpDelta", "=", "deltaListOrignal"}], ";", 
              RowBox[{
               RowBox[{"tmpDelta", "[", 
                RowBox[{"[", 
                 RowBox[{"tmpmu", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"tmpDelta", "[", 
                 RowBox[{"[", 
                  RowBox[{"tmpmu", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "+", 
                "s1"}]}], ";", 
              RowBox[{
               RowBox[{"tmpDelta", "[", 
                RowBox[{"[", 
                 RowBox[{"tmpmu", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"tmpDelta", "[", 
                 RowBox[{"[", 
                  RowBox[{"tmpmu", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "+", 
                "s2"}]}], ";", 
              RowBox[{
               RowBox[{"tmpDelta", "[", 
                RowBox[{"[", 
                 RowBox[{"tmpmu", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"tmpDelta", "[", 
                 RowBox[{"[", 
                  RowBox[{"tmpmu", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "+", 
                "s3"}]}], ";", "tmpDelta"}], ",", 
             RowBox[{"{", 
              RowBox[{"s1", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"s2", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"s3", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "]"}], ",",
            "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{
          FractionBox["1", "8"], 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{"offsetTermStaggered", "[", 
             RowBox[{
              RowBox[{"allDelta", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", "L", ",", "1", ",", 
              RowBox[{"etas", "[", 
               RowBox[{"[", "mu", "]"}], "]"}], ",", "boundary"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", 
              RowBox[{"Length", "[", "allDelta", "]"}]}], "}"}]}], "]"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"staggeredGamma5INum", "[", 
      RowBox[{"L_", ",", "mu_", ",", "boundary_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "eta51", ",", "eta52", ",", "eta53", ",", "eta54", ",", "etas", ",", 
         "deltaListOrignal", ",", "allDelta", ",", "tmpmu", ",", "tmpDelta"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"eta51", "[", "x_", "]"}], ":=", 
         RowBox[{
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "2"}], "]"}], 
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "3"}], "]"}], 
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "4"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"eta52", "[", "x_", "]"}], ":=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"eta", "[", 
            RowBox[{"x", ",", "1"}], "]"}]}], 
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "3"}], "]"}], 
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "4"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"eta53", "[", "x_", "]"}], ":=", 
         RowBox[{
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "1"}], "]"}], 
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "2"}], "]"}], 
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "4"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"eta54", "[", "x_", "]"}], ":=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"eta", "[", 
            RowBox[{"x", ",", "1"}], "]"}]}], 
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "2"}], "]"}], 
          RowBox[{"eta", "[", 
           RowBox[{"x", ",", "3"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"etas", "=", 
         RowBox[{"{", 
          RowBox[{"eta51", ",", "eta52", ",", "eta53", ",", "eta54"}], 
          "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"deltaListOrignal", "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmpmu", "=", 
         RowBox[{"Drop", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
           RowBox[{"{", "mu", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"allDelta", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"tmpDelta", "=", "deltaListOrignal"}], ";", 
              RowBox[{
               RowBox[{"tmpDelta", "[", 
                RowBox[{"[", 
                 RowBox[{"tmpmu", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"tmpDelta", "[", 
                 RowBox[{"[", 
                  RowBox[{"tmpmu", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "+", 
                "s1"}]}], ";", 
              RowBox[{
               RowBox[{"tmpDelta", "[", 
                RowBox[{"[", 
                 RowBox[{"tmpmu", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"tmpDelta", "[", 
                 RowBox[{"[", 
                  RowBox[{"tmpmu", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "+", 
                "s2"}]}], ";", 
              RowBox[{
               RowBox[{"tmpDelta", "[", 
                RowBox[{"[", 
                 RowBox[{"tmpmu", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"tmpDelta", "[", 
                 RowBox[{"[", 
                  RowBox[{"tmpmu", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "+", 
                "s3"}]}], ";", "tmpDelta"}], ",", 
             RowBox[{"{", 
              RowBox[{"s1", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"s2", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"s3", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "]"}], ",",
            "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"0.125", " ", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{"offsetTermStaggered", "[", 
             RowBox[{
              RowBox[{"allDelta", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", "L", ",", "1", ",", 
              RowBox[{"etas", "[", 
               RowBox[{"[", "mu", "]"}], "]"}], ",", "boundary"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", 
              RowBox[{"Length", "[", "allDelta", "]"}]}], "}"}]}], "]"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.901840754006345*^9, 3.901840762908908*^9}, {
   3.9018409598414807`*^9, 3.901841016601254*^9}, {3.9018410758765917`*^9, 
   3.9018411544082365`*^9}, 3.901841281057314*^9, {3.9018416097782116`*^9, 
   3.9018416287651243`*^9}, {3.901841671507372*^9, 3.9018417015362864`*^9}, {
   3.901841795899476*^9, 3.9018417959829893`*^9}, {3.901841827197981*^9, 
   3.9018418542446985`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"0c24df63-d015-4953-9136-19194063aa2f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
7p6r/J7LzG4Xpbw6v/3fv6e7DR81cdaSLRcjsirkWzPIaHUSmu7fayCjmdJi
L4zM+nRH0kh6jB81dJjbtLkrdgV8yDaguCy1TSRTnx9bPXvsSNfJs5f6nHz+
g0GzSaZ/jCpxTdJwKNG9C0JJDyCU1ITaUM8Zc0IatfzPlxb2rG1u18Fzd+Cr
z1/e39o+un331Y+zhbHHXR1MG81/JJvGBdTzVcJ8sJ+y7RVUSz/rVjTziVNn
5m2aO075Nz1qSv6e13bN84hT/+vWxmWWj++1h+9jop8e92pdhWvz57K7qrch
LQj9Xz3JcfY/9J3mL4UJgct61ZR9gkJwbJ0XBNLMmBa8WN6x786YsnzP4m9j
3GfXgDIcKPmv13a0lKsOuXXGn1ey7pHhEcccHtpq0IZbb1+d9XDk8Rp5BEhC
lEx/um1Mx85uy/acufUyOiYiyGewA9e07ogDUVq/EVj+jFaV0JrJaIa01AsT
J99c1rtO9TYT1x8PeBgeG/fhWfDpTR6dWw/b+95gxjwrveKQqTdmO3eZfezJ
23s7RtTlEpJrTedV9zNK+0nIH0Fz/+y8XH7XOYQSE8YVSiVONkKJFmpDPWZc
CanrI6lAZNr9VV1s2FwHV79PvzMr/413947u49tbEmy7CVdkWxXxl23deOXa
r4ZMOjRAumQiYdZhPd3aP8IXS5pJspFt39ttYOdxhyNkFzDKujjWlk3w2nq/
U1XAi+N3SEp9Tt3Zd0v+jejLqbENpHUhwatqX6eOvWVxkci267f3o/z7ksl+
I528gsu6hlIlOLvqNsfC/Jyc7LLLycmvbLduNE74YVcfG/llaaoPORxjFOc1
64ZHK9cT0i6VIHC6PZvFbbYk6Mb87r0XBSbIhKooar0zj8XmjzqZot2iuNwZ
rTKhNZTRDGmlF5bzaKlTFetem8PlV8PPebfZpWbP7eW4L1ehlF1xyOSDrv03
R0h/fzI1YFo9DnUrsr5nUKayd8p5saF3mzH+sfK/GUKJARWhZCC9e2WXV4QS
PdSGesu423Yjlvfqv+42bMKk1aJH8uUP+cN3CJX7hPkA+XtXBff/qs9hlTYf
ToWCsNVtqcWPCQvn1S/odsYRx2zpIi3W2DZ9dkaWyHbhi6VUi2Pisu+bqj5d
3oUxVgRhNtivxB+/WO1swbFu4bba/97H9KJWtiA9KnDTxLY2HE6tiVdkb2YJ
ni5u00npNoOqVIqzq86Nx4I7/6snN92tLAgTx0WPDWYjXf0kjvcfVbPEsjQ9
Nocb/Gh6MsV/VHPP4KLbLblnXS0JFsHmV2/nGVBypb28M67mBItdyzNYu/cu
y5vRKhNaYxnNjBZ6YaLIDR1MuQ3+uif3SwherHGW/HxKl9/RQ0quOPJEURv/
pAZ1E1UHHqbdQ6Yg+uioVi6bXiuse4BQUkllKBlKC8fo8opQ+vWGqA31U+Vq
241I9qPFrSVtC8dh8lWFCUf5N6bas2mWH846MdycIMxHnCzb9GLRx+29qB1v
TBpNPBtHX3KlHR9GDXlj8wcc/KKQjILrU6pJDsuk584EVa1KwUNqk2Fem9Wy
fyh8t9a5an3XQxE0Kw5lPVvbjV/FZe+vdyZTz7o7Fj+EUF8lObvv1DnA7I+3
z/gdOXK47I4cOXY29DPWiyov8se1aQ3kl6WxaL/ymYGf2IwzoxtNvlb0JYTP
/qEW2iO4jWbfzir5QjJxdy8TaqTA5ADt1obly2gGCa2xjGZG870wUfgaJx7V
T5U7eukS+gTBrTP1annneisQ/Ih+/SQ0+Nr5k/43I0v/XfK+Rb16dPfm1XMn
Tt6JUfWdaa84Csjv/iP4bOqJS7dtn0v+YOS3AK/2HeaF0C0eiVBSRXUoaXqQ
gNZDqdTLK0KpmJHUhtqKJp3R57ZdvTPIrG03FsK33u0ktQv1aD9cIcGFr5Y1
ly4/XGI/UTJpd28TScZPuFqWLlVB1E4XGzbBqzPq6Edlv0ZecdnUZlWY4sMh
6d2oopWxVO41UvQVOA3myvxZxsXxDq0XPVQ2RFQcvb1HNZc9xQ2W+OOmbi3/
fvDzg8QJl7wXbvQNfJWYIw10cV5KXMSDCzuWel+k2fu10pzdB2U4UtAHmaHz
mssvS2PiOCdEY3NAdKDgwd/tx57NkP73z2DmDz9Gc3NacNOjhiQPuC1XvJbm
gXrJXfQBKU92zV1wMrrUQQXlymgmCa25jGZG870wQeC06mxJ97a554XPuTK/
lDg96l7IGyVLVoi/PtizeNGO+6XdtyNTnx9ZvnBTSFKJHzArZNWgrq1qW0ha
Z8vh/qU9mCFTry/u16mZvSRL2PZTrtM+IJFBd8Whkxvs6UANBuS185Yfjpf1
ZHW3VmNPfqENKYSSSkYYSiourwglKf2pDZlEk7Jw0lo06Yz+JqS6Z5Bp224M
yLSL46neEbX4TqRCAyKO39mDWn7Ydvxl+dpb/MmnE4/FruFxU+1WhcwIXdja
XNKmDN8XrvynKL7bz3Vc9FQxcshUvyFVJD+7xYDDqh/mFW3Oyq454/cfCQKm
NCn9OWB2wNSG/fZLV2wWPJzXqufW3xv7/NrwhyC4ppZWFjxCel+sw8Kbiut4
VKKzG6zukVa8u3fv9qgonz590vXXZS7v5ZoOVeSXpWkw+7YBb2khzsvNLw7d
ohvXhFnfAzSloShsVSuqd1JjWmBR74Rpcgu/Rz4KCTjvu2XBaOeaJgTHYebt
UvsjZc9oZgmtwYwuOt74wP/menp4TFdm6tCWVdlVWwyZqvQVHh5e87aGJDO+
xy6K2tCh6AE2wbGs22G456pdp2+Hfy/1fBU8nPcHR8UgQVHYv60lp77a5ACa
0yf+vLkzr9Stgn6R9gqIKoN9Vc5Mpbni0BM8+PsPakS3pEf/e76CIGr/0BZ9
trxR9ugeoaSSEYaSqssrQkk7ofT7q6hVGzKJplLDSSvR9Pvdo47/z3Vgv359
y6Jfv8Guf5+KVucU6nlCqnEGGbftRiDtxEgr6kfjNlvyQjF9M8+4WlMdq34H
S3SsxB83dihqs9RsVQo+HBhSk2vRfPqZUp/fij9t6kR12qrT/upZl8bZsVkE
r/NmhREUioqXm7CfLnsUGWnZpf/L7CuTHCddlXx25tUprSdclHmKIuk+NuPb
O9iYcahJTKb8um0G/G9vaALteahEZzdQvSPVhSdPnrhXlC9fvuj666pDGLnD
hf97WRq2Xd+SqzEZqPzAadTNGfplp6UjSqlbi8OOFw9qYZjc5I+AlWPHTpu3
3jfo+c7BpizVtWEZM5phQmsyo6WEr7cOc27ZrFlTperb8Fg8m3rKX9CsWasO
o/fSrk9Bj0wJWdDWUn4aMmFWp++qkK9Kjzr3w9Xdey5HlLpAY0Fs8L5dZ17T
7u0tXV+f23TJc5UTl8mEXZJYod/+uwS6Kw49Sbg1pcY785w3FE0qECddmtam
w4LbSjYil74EoaSS8YWSyssrQkk7ofTrs9V7bsgkmkoLJ61E0y/5t+c6Wkrv
e5YBQfCsWyy6r9azWb1OSHXOIPO23eDlXB5vR3UJOQ6etxTbB8HtmdRIBV77
dSUfepEJO3uasNi2k9SapiNOujytiZlN52W3VdwoIlN8B0tvKQ06SlPKZ5x3
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
VUTGXVBc/4wGQkkz6EJJ8YwilAyCbkOpkDaa6F6mNJy0FU0GpOLadvXOoOH2
dzWqeIlh09676e6UyxEn+A61M2m5/KXe9TLFCYcGWPMazbmr9hNgMu34sKqW
Q4/RLUQjTjo9vtsE/48yZaMw7uJ0RxNeXbcTsYwW2qrkZ1f3xDEn57q6TZg+
Z8UWv5sR354x29SWIni3o091Dpvfe3uk7PVYckkaIF13lm07KUC/7yoJPx0d
XotDEFXaLr6n92WslpBfD/SlJhtau56RX+ld/eQW50Zu7MJjsfnDjyYImJxO
/c1oQ5J7YYw1YdJn/3eyUPB+27CBPu/obvhKBw7Tjs4oWri82dIXP/+Z8OXS
ZlyedKQImXxq4gDvVz//jTj6v448tv30QEGh+PP2wa5HSlkcTHWbKPzs59qq
98aXiq+gll+oKunRE1X7H1R5XSj+OIRS+SGUChFKGsMsmpSHk3aiyaBUXEKq
cwYNub+rSXk3PWpJerrUysZM1k6O2tKtqk3//fq1wx2ZEez1h0m9aQEMVxqV
JQiaUdOUbteUonfOfHN0Zt/uI//2OXTqjO/WpVO61bV3mrjjfsm1mJSp7GdX
3zDa1FYq/9UaZwuCMOu8qcSoI0nr01w6X5+wdr+on8tJS5Gpt+e1MicIroPr
cWb3Mcop++Gu1Wcr4HPUk3NpnA012bDXroSS4cs0uQvuL+/SrHFde76VNd/G
rlo1Wxu+lZVNjXqNmw/ZpuLT9TOjDUz2Y++u9g69Zy+ePnDAvGvJtKeyIHRO
PQ61FLTC6AzRu9VteLxmRaulFyFTghY612w6ctHCsf3G7A6XucFDpoeu7Fqz
Xp85i8a5jNoWpnRyruo2kfx+Y3Z757+CFPd7k0q/OM6e2rmc13TRk5+fkh99
52600rtNCCUNQChJvwdCSSOYRJPycNJKNBmaiktIxmfQmPq7ZVKQ+ulF6PVz
fltnOFtTD0G4TSfvvRT84EXUNxVhJ3i/s081++F+erRBWubtOY5WrReEZpTh
txS9W+NkqmJ+qij987ObZw7s2OV76e6buEwG/WycXT3FtDYURf7XyYJgsW1G
nVS4IovjA1aO7t6pr9eRt/pbGgre7+5fnc1iW/3575MKmVoi/ry9t6PXrYr4
KHUUPJjbgJps2Fpx8esi6ie3evQwow2QODsx/FXYlwxlP0/R6vxmLrSr8wu+
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
    "], {{0, 69.00354601555912}, {602.0309377009651, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{143.9926, 143.9926},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{602.0309377009651, 69.00354601555912},
  PlotRange->{{0, 602.0309377009651}, {0, 69.00354601555912}}]], "Text",
 CellChangeTimes->{
  3.901843411129803*^9},ExpressionUUID->"de41a89b-c033-4e1c-9a4f-\
975752645676"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"staggeredGamma5", "[", 
     RowBox[{"L_", ",", "boundary_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "eta51", ",", "deltaListOrignal", ",", "allDelta", ",", "tmpDelta"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"eta51", "[", "x_", "]"}], ":=", 
        RowBox[{
         RowBox[{"eta", "[", 
          RowBox[{"x", ",", "2"}], "]"}], 
         RowBox[{"eta", "[", 
          RowBox[{"x", ",", "3"}], "]"}], 
         RowBox[{"eta", "[", 
          RowBox[{"x", ",", "4"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"deltaListOrignal", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"allDelta", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tmpDelta", "=", "deltaListOrignal"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"tmpDelta", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{"tmpDelta", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", "s1"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"tmpDelta", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{"tmpDelta", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", "s2"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"tmpDelta", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{"tmpDelta", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "+", "s3"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"tmpDelta", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{"tmpDelta", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "+", "s4"}]}], ";", 
             "\[IndentingNewLine]", "tmpDelta"}], ",", 
            RowBox[{"{", 
             RowBox[{"s1", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"s2", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"s3", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"s4", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
          "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{
         FractionBox["1", "16"], 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"offsetTermStaggered", "[", 
            RowBox[{
             RowBox[{"allDelta", "[", 
              RowBox[{"[", "k", "]"}], "]"}], ",", "L", ",", "1", ",", 
             "eta51", ",", "boundary"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", 
             RowBox[{"Length", "[", "allDelta", "]"}]}], "}"}]}], "]"}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"staggeredGamma5Num", "[", 
    RowBox[{"L_", ",", "boundary_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eta51", ",", "deltaListOrignal", ",", "allDelta", ",", "tmpDelta"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"eta51", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"eta", "[", 
         RowBox[{"x", ",", "2"}], "]"}], 
        RowBox[{"eta", "[", 
         RowBox[{"x", ",", "3"}], "]"}], 
        RowBox[{"eta", "[", 
         RowBox[{"x", ",", "4"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"deltaListOrignal", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"allDelta", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"tmpDelta", "=", "deltaListOrignal"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"tmpDelta", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"tmpDelta", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "+", "s1"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"tmpDelta", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"tmpDelta", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", "s2"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"tmpDelta", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"tmpDelta", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "+", "s3"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"tmpDelta", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"tmpDelta", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "+", "s4"}]}], ";", 
            "\[IndentingNewLine]", "tmpDelta"}], ",", 
           RowBox[{"{", 
            RowBox[{"s1", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"s2", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"s3", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"s4", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
         "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"0.0625", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"offsetTermStaggered", "[", 
           RowBox[{
            RowBox[{"allDelta", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", "L", ",", "1.0", ",", 
            "eta51", ",", "boundary"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Length", "[", "allDelta", "]"}]}], "}"}]}], "]"}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9018441401919403`*^9, 3.9018442248615437`*^9}, {
  3.9018442684202995`*^9, 3.9018443129647074`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"b72bff9c-4290-4b41-88ea-92f29dcebdac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tests", "Chapter",
 CellChangeTimes->{{3.9016357690679297`*^9, 3.9016357813436623`*^9}, {
  3.9016360926168385`*^9, 3.901636093575362*^9}},
 FontFamily->"Swis721 BT",
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0.5019607843137255, 0.],
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"4573a2c6-e8a2-436c-b232-f4a547a2fb58"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"checkDelta", "[", 
    RowBox[{"m1_", ",", "m2_"}], "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"m1", "[", 
         RowBox[{"[", "x", "]"}], "]"}], "[", 
        RowBox[{"[", "y", "]"}], "]"}], "-", 
       RowBox[{
        RowBox[{"m2", "[", 
         RowBox[{"[", "x", "]"}], "]"}], "[", 
        RowBox[{"[", "y", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", 
       RowBox[{"Length", "[", "m1", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"m1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9020777667763414`*^9, 3.902077833186006*^9}},
 CellLabel->
  "In[1081]:=",ExpressionUUID->"5bcf19eb-0f7f-4f04-a6a1-983c9736095e"],

Cell[CellGroupData[{

Cell["Staggered fermion", "Section",
 CellChangeTimes->{{3.9016361146751885`*^9, 3.901636131587021*^9}, {
  3.9016725848732595`*^9, 3.9016725901771708`*^9}, {3.9017218885478983`*^9, 
  3.901721896561104*^9}, {3.9017231120110455`*^9, 3.901723113316786*^9}, {
  3.901723184947094*^9, 3.9017231852402806`*^9}, {3.9020695623959527`*^9, 
  3.9020695662025304`*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1],
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"d5e59a5f-7dff-4adf-a145-d3436d9cd862"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"stGammaI", "=", 
   RowBox[{"2.0", " ", 
    RowBox[{"diagnalTermStaggered", "[", 
     RowBox[{"1.0", ",", "lat"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stGamma1", "=", 
   RowBox[{"2.0", " ", 
    RowBox[{"staggeredGammaNum", "[", 
     RowBox[{"lat", ",", "0", ",", "torusBound"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stGamma2", "=", 
   RowBox[{"2.0", " ", 
    RowBox[{"staggeredGammaNum", "[", 
     RowBox[{"lat", ",", "1", ",", "torusBound"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stGamma3", "=", 
   RowBox[{"2.0", " ", 
    RowBox[{"staggeredGammaNum", "[", 
     RowBox[{"lat", ",", "2", ",", "torusBound"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stGamma4", "=", 
   RowBox[{"2.0", " ", 
    RowBox[{"staggeredGammaNum", "[", 
     RowBox[{"lat", ",", "3", ",", "torusBound"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stGamma5", "=", 
   RowBox[{"2.0", " ", 
    RowBox[{"staggeredGamma5Num", "[", 
     RowBox[{"lat", ",", "torusBound"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stSigma12", "=", 
   RowBox[{"2.0", " ", 
    RowBox[{"staggeredSigmaNum", "[", 
     RowBox[{"lat", ",", "0", ",", "1", ",", "torusBound"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stSigma13", "=", 
   RowBox[{"2.0", " ", 
    RowBox[{"staggeredSigmaNum", "[", 
     RowBox[{"lat", ",", "0", ",", "2", ",", "torusBound"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stSigma14", "=", 
   RowBox[{"2.0", " ", 
    RowBox[{"staggeredSigmaNum", "[", 
     RowBox[{"lat", ",", "0", ",", "3", ",", "torusBound"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stSigma23", "=", 
   RowBox[{"2.0", " ", 
    RowBox[{"staggeredSigmaNum", "[", 
     RowBox[{"lat", ",", "1", ",", "2", ",", "torusBound"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stSigma24", "=", 
   RowBox[{"2.0", " ", 
    RowBox[{"staggeredSigmaNum", "[", 
     RowBox[{"lat", ",", "1", ",", "3", ",", "torusBound"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stSigma34", "=", 
   RowBox[{"2.0", " ", 
    RowBox[{"staggeredSigmaNum", "[", 
     RowBox[{"lat", ",", "2", ",", "3", ",", "torusBound"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stGamma51", "=", 
   RowBox[{"2.0", " ", 
    RowBox[{"staggeredGamma5INum", "[", 
     RowBox[{"lat", ",", "1", ",", "torusBound"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stGamma52", "=", 
   RowBox[{"2.0", " ", 
    RowBox[{"staggeredGamma5INum", "[", 
     RowBox[{"lat", ",", "2", ",", "torusBound"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stGamma53", "=", 
   RowBox[{"2.0", " ", 
    RowBox[{"staggeredGamma5INum", "[", 
     RowBox[{"lat", ",", "3", ",", "torusBound"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stGamma54", "=", 
    RowBox[{"2.0", " ", 
     RowBox[{"staggeredGamma5INum", "[", 
      RowBox[{"lat", ",", "4", ",", "torusBound"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"investigateGammaSt", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "stGammaI", ",", "stGamma1", ",", " ", "stGamma2", ",", " ", "stGamma3", 
      ",", " ", "stGamma4", ",", " ", "stGamma5", ",", "\[IndentingNewLine]", 
      "stSigma12", ",", "stSigma13", ",", "stSigma14", ",", " ", "stSigma23", 
      ",", "stSigma24", ",", "stSigma34", ",", " ", "\[IndentingNewLine]", 
      "stGamma51", ",", "stGamma52", ",", "stGamma53", ",", "stGamma54"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d0staggered", "=", 
   RowBox[{"staggeredDiracDNum", "[", 
    RowBox[{"lat", ",", "0.025", ",", "torusBound"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"doperatorWithCondStaggered", "=", 
   RowBox[{"d0staggered", "+", 
    RowBox[{"0.1", " ", "I", " ", "stGamma1"}], "+", 
    RowBox[{"0.2", " ", "I", " ", "stGamma2"}], "+", 
    RowBox[{"0.3", " ", "I", " ", "stGamma3"}], "+", 
    RowBox[{"0.4", " ", "I", " ", "stGamma4"}], "+", 
    RowBox[{"0.5", " ", "I", " ", "stGamma5"}], "+", 
    RowBox[{"0.12", " ", "I", " ", "stSigma12"}], "+", 
    RowBox[{"0.13", " ", "I", " ", "stSigma13"}], "+", 
    RowBox[{"0.14", " ", "I", " ", "stSigma14"}], "+", 
    RowBox[{"0.23", " ", "I", " ", "stSigma23"}], "+", 
    RowBox[{"0.24", " ", "I", " ", "stSigma24"}], "+", 
    RowBox[{"0.34", " ", "I", " ", "stSigma34"}], "+", 
    RowBox[{"0.15", " ", "stGamma51"}], "+", 
    RowBox[{"0.25", " ", "stGamma52"}], "+", 
    RowBox[{"0.35", " ", "stGamma53"}], "+", 
    RowBox[{"0.45", " ", "stGamma54"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9020695749655266`*^9, 3.9020696816879253`*^9}, 
   3.9020706667329626`*^9, {3.902077729460178*^9, 3.902077733727914*^9}, 
   3.9020784803210735`*^9},
 CellLabel->
  "In[1180]:=",ExpressionUUID->"1204a534-308b-4484-8d52-7830256dcfbd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doperatorWithCondStaggered", "=", 
   RowBox[{"d0staggered", "+", 
    RowBox[{"0.1", " ", "I", " ", "stGamma1"}], "+", 
    RowBox[{"0.2", " ", "I", " ", "stGamma2"}], "+", 
    RowBox[{"0.3", " ", "I", " ", "stGamma3"}], "+", 
    RowBox[{"0.4", " ", "I", " ", "stGamma4"}], "+", 
    RowBox[{"0.5", " ", "I", " ", "stGamma5"}], "+", 
    RowBox[{"0.12", " ", "I", " ", "stSigma12"}], "+", 
    RowBox[{"0.13", " ", "I", " ", "stSigma13"}], "+", 
    RowBox[{"0.14", " ", "I", " ", "stSigma14"}], "+", 
    RowBox[{"0.23", " ", "I", " ", "stSigma23"}], "+", 
    RowBox[{"0.24", " ", "I", " ", "stSigma24"}], "+", 
    RowBox[{"0.34", " ", "I", " ", "stSigma34"}], "+", 
    RowBox[{"0.15", " ", "stGamma51"}], "+", 
    RowBox[{"0.25", " ", "stGamma52"}], "+", 
    RowBox[{"0.35", " ", "stGamma53"}], "+", 
    RowBox[{"0.45", " ", "stGamma54"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9020779729768133`*^9, 3.9020780060884275`*^9}, 
   3.9020780369059634`*^9, {3.902078071986718*^9, 3.90207811647025*^9}, {
   3.902078193490397*^9, 3.9020782424110565`*^9}, {3.9020782901169147`*^9, 
   3.9020782902933607`*^9}, 3.9020784390948963`*^9, 3.9020784782859097`*^9, 
   3.90207883665646*^9, {3.9020788842504625`*^9, 3.9020788880997543`*^9}, {
   3.902079006064231*^9, 3.9020790321803503`*^9}, 3.9020792321989594`*^9, 
   3.9020793101580305`*^9},
 CellLabel->
  "In[1237]:=",ExpressionUUID->"89067abd-06e5-4613-b1b6-f9534d059210"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "folderHeader", "=", 
   "\"\<F:\\\\MathematicaWork\\\\FreeFermion\\\\Data\\\\\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.902069788099351*^9, 3.902069798222031*^9}},
 CellLabel->
  "In[700]:=",ExpressionUUID->"9bf4941a-84d9-4fd7-b5d0-91fa6624b5b8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folderHeader", "<>", "\"\<KS_EMD_D.csv\>\""}], ",", 
       "\"\<CSV\>\""}], "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inverseDData", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"folderHeader", "<>", "\"\<KS_EMD_InverseD.csv\>\""}], ",", 
        "\"\<CSV\>\""}], "]"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gamma1Data", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folderHeader", "<>", "\"\<KS_EMD_Gamma1.csv\>\""}], ",", 
       "\"\<CSV\>\""}], "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gamma2Data", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folderHeader", "<>", "\"\<KS_EMD_Gamma2.csv\>\""}], ",", 
       "\"\<CSV\>\""}], "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gamma3Data", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folderHeader", "<>", "\"\<KS_EMD_Gamma3.csv\>\""}], ",", 
       "\"\<CSV\>\""}], "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gamma4Data", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folderHeader", "<>", "\"\<KS_EMD_Gamma4.csv\>\""}], ",", 
       "\"\<CSV\>\""}], "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gamma5Data", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"folderHeader", "<>", "\"\<KS_EMD_Gamma5.csv\>\""}], ",", 
        "\"\<CSV\>\""}], "]"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma12Data", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folderHeader", "<>", "\"\<KS_EMD_Sigma12.csv\>\""}], ",", 
       "\"\<CSV\>\""}], "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma13Data", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folderHeader", "<>", "\"\<KS_EMD_Sigma13.csv\>\""}], ",", 
       "\"\<CSV\>\""}], "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma14Data", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folderHeader", "<>", "\"\<KS_EMD_Sigma14.csv\>\""}], ",", 
       "\"\<CSV\>\""}], "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma23Data", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folderHeader", "<>", "\"\<KS_EMD_Sigma23.csv\>\""}], ",", 
       "\"\<CSV\>\""}], "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma24Data", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folderHeader", "<>", "\"\<KS_EMD_Sigma24.csv\>\""}], ",", 
       "\"\<CSV\>\""}], "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sigma34Data", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"folderHeader", "<>", "\"\<KS_EMD_Sigma34.csv\>\""}], ",", 
        "\"\<CSV\>\""}], "]"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gamma51Data", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folderHeader", "<>", "\"\<KS_EMD_Gamma51.csv\>\""}], ",", 
       "\"\<CSV\>\""}], "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gamma52Data", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folderHeader", "<>", "\"\<KS_EMD_Gamma52.csv\>\""}], ",", 
       "\"\<CSV\>\""}], "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gamma53Data", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folderHeader", "<>", "\"\<KS_EMD_Gamma53.csv\>\""}], ",", 
       "\"\<CSV\>\""}], "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gamma54Data", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folderHeader", "<>", "\"\<KS_EMD_Gamma54.csv\>\""}], ",", 
       "\"\<CSV\>\""}], "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.902069532865309*^9, 3.9020695341307745`*^9}, {
  3.9020697626912675`*^9, 3.9020698278437605`*^9}, {3.902071453770309*^9, 
  3.9020714647092433`*^9}, {3.9020715010086975`*^9, 3.9020715148861723`*^9}, {
  3.902072169359826*^9, 3.9020721771903563`*^9}, {3.902072250527728*^9, 
  3.902072268374544*^9}, {3.9020772800234966`*^9, 3.9020773080596647`*^9}, {
  3.9020793808853016`*^9, 3.9020794006498785`*^9}},
 CellLabel->
  "In[1311]:=",ExpressionUUID->"93e11406-9958-4222-ab08-1b78fb448dd2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"checkDelta", "[", 
  RowBox[{"dData", ",", "doperatorWithCondStaggered"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"checkDelta", "[", 
   RowBox[{"inverseDData", ",", 
    RowBox[{"Inverse", "[", "doperatorWithCondStaggered", "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"checkDelta", "[", 
  RowBox[{"gamma1Data", ",", 
   RowBox[{"0.5", "stGamma1"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"checkDelta", "[", 
  RowBox[{"gamma2Data", ",", 
   RowBox[{"0.5", "stGamma2"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"checkDelta", "[", 
  RowBox[{"gamma3Data", ",", 
   RowBox[{"0.5", "stGamma3"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"checkDelta", "[", 
  RowBox[{"gamma4Data", ",", 
   RowBox[{"0.5", "stGamma4"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"checkDelta", "[", 
   RowBox[{"gamma5Data", ",", 
    RowBox[{"0.5", "stGamma5"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"checkDelta", "[", 
  RowBox[{"sigma12Data", ",", 
   RowBox[{"0.5", "stSigma12"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"checkDelta", "[", 
  RowBox[{"sigma13Data", ",", 
   RowBox[{"0.5", "stSigma13"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"checkDelta", "[", 
  RowBox[{"sigma14Data", ",", 
   RowBox[{"0.5", "stSigma14"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"checkDelta", "[", 
  RowBox[{"sigma23Data", ",", 
   RowBox[{"0.5", "stSigma23"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"checkDelta", "[", 
  RowBox[{"sigma24Data", ",", 
   RowBox[{"0.5", "stSigma24"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"checkDelta", "[", 
   RowBox[{"sigma34Data", ",", 
    RowBox[{"0.5", "stSigma34"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"checkDelta", "[", 
  RowBox[{"gamma51Data", ",", 
   RowBox[{"0.5", "stGamma51"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"checkDelta", "[", 
  RowBox[{"gamma52Data", ",", 
   RowBox[{"0.5", "stGamma52"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"checkDelta", "[", 
  RowBox[{"gamma53Data", ",", 
   RowBox[{"0.5", "stGamma53"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"checkDelta", "[", 
  RowBox[{"gamma54Data", ",", 
   RowBox[{"0.5", "stGamma54"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9020778974090967`*^9, 3.902077904210859*^9}, {
  3.902079415630599*^9, 3.9020795173369026`*^9}},
 CellLabel->
  "In[1328]:=",ExpressionUUID->"3479f9bf-c6c7-4827-a41e-298fbbcac5ee"],

Cell[BoxData[
 FormBox["0.`", TraditionalForm]], "Output",
 CellChangeTimes->{3.902077905461067*^9, 3.902079556361863*^9, 
  3.9021055677065325`*^9, 3.9021096053037715`*^9},
 CellLabel->
  "Out[1328]=",ExpressionUUID->"26fbfcfb-b5be-422b-9c1d-919600678517"],

Cell[BoxData[
 FormBox["16.56149018519509`", TraditionalForm]], "Output",
 CellChangeTimes->{3.902077905461067*^9, 3.902079556361863*^9, 
  3.9021055677065325`*^9, 3.9021096055893555`*^9},
 CellLabel->
  "Out[1329]=",ExpressionUUID->"46c8c7e1-e6c3-475f-bde9-decac7272975"],

Cell[BoxData[
 FormBox["0.`", TraditionalForm]], "Output",
 CellChangeTimes->{3.902077905461067*^9, 3.902079556361863*^9, 
  3.9021055677065325`*^9, 3.9021096056388717`*^9},
 CellLabel->
  "Out[1330]=",ExpressionUUID->"c8bc9a61-879d-4deb-8e28-7ebc138d17c3"],

Cell[BoxData[
 FormBox["0.`", TraditionalForm]], "Output",
 CellChangeTimes->{3.902077905461067*^9, 3.902079556361863*^9, 
  3.9021055677065325`*^9, 3.902109605690878*^9},
 CellLabel->
  "Out[1331]=",ExpressionUUID->"2409f820-a0d9-41b1-983b-d19f262eda01"],

Cell[BoxData[
 FormBox["0.`", TraditionalForm]], "Output",
 CellChangeTimes->{3.902077905461067*^9, 3.902079556361863*^9, 
  3.9021055677065325`*^9, 3.902109605747078*^9},
 CellLabel->
  "Out[1332]=",ExpressionUUID->"38d3d0a5-892f-403b-b3ff-8da1d99d95de"],

Cell[BoxData[
 FormBox["0.`", TraditionalForm]], "Output",
 CellChangeTimes->{3.902077905461067*^9, 3.902079556361863*^9, 
  3.9021055677065325`*^9, 3.902109605792737*^9},
 CellLabel->
  "Out[1333]=",ExpressionUUID->"ca8f8cbc-f4e1-41d2-88ef-3812190f5a63"],

Cell[BoxData[
 FormBox["0.`", TraditionalForm]], "Output",
 CellChangeTimes->{3.902077905461067*^9, 3.902079556361863*^9, 
  3.9021055677065325`*^9, 3.902109605845275*^9},
 CellLabel->
  "Out[1334]=",ExpressionUUID->"d847faf6-ae81-4fc9-9d44-55de4106c478"],

Cell[BoxData[
 FormBox["0.`", TraditionalForm]], "Output",
 CellChangeTimes->{3.902077905461067*^9, 3.902079556361863*^9, 
  3.9021055677065325`*^9, 3.9021096059437866`*^9},
 CellLabel->
  "Out[1335]=",ExpressionUUID->"c12e3d0b-6404-499f-a0ad-3fa1f1010075"],

Cell[BoxData[
 FormBox["0.`", TraditionalForm]], "Output",
 CellChangeTimes->{3.902077905461067*^9, 3.902079556361863*^9, 
  3.9021055677065325`*^9, 3.902109606037801*^9},
 CellLabel->
  "Out[1336]=",ExpressionUUID->"6d2f590c-cbc6-4b60-b144-f1ba579d343d"],

Cell[BoxData[
 FormBox["0.`", TraditionalForm]], "Output",
 CellChangeTimes->{3.902077905461067*^9, 3.902079556361863*^9, 
  3.9021055677065325`*^9, 3.9021096061373177`*^9},
 CellLabel->
  "Out[1337]=",ExpressionUUID->"9b16f53a-50ff-43ef-9cca-074b459293fb"],

Cell[BoxData[
 FormBox["0.`", TraditionalForm]], "Output",
 CellChangeTimes->{3.902077905461067*^9, 3.902079556361863*^9, 
  3.9021055677065325`*^9, 3.9021096062358313`*^9},
 CellLabel->
  "Out[1338]=",ExpressionUUID->"32a88a9c-76f4-42c3-ab14-790e667f9138"],

Cell[BoxData[
 FormBox["0.`", TraditionalForm]], "Output",
 CellChangeTimes->{3.902077905461067*^9, 3.902079556361863*^9, 
  3.9021055677065325`*^9, 3.9021096063353567`*^9},
 CellLabel->
  "Out[1339]=",ExpressionUUID->"4a1d9e94-c940-4816-8eb2-2526001c90a2"],

Cell[BoxData[
 FormBox["0.`", TraditionalForm]], "Output",
 CellChangeTimes->{3.902077905461067*^9, 3.902079556361863*^9, 
  3.9021055677065325`*^9, 3.902109606432872*^9},
 CellLabel->
  "Out[1340]=",ExpressionUUID->"cb8e02b7-0c26-4023-97e1-6ff712ce734f"],

Cell[BoxData[
 FormBox["0.`", TraditionalForm]], "Output",
 CellChangeTimes->{3.902077905461067*^9, 3.902079556361863*^9, 
  3.9021055677065325`*^9, 3.902109606482407*^9},
 CellLabel->
  "Out[1341]=",ExpressionUUID->"4226d49c-be37-4dd5-81fe-efd0186cc758"],

Cell[BoxData[
 FormBox["0.`", TraditionalForm]], "Output",
 CellChangeTimes->{3.902077905461067*^9, 3.902079556361863*^9, 
  3.9021055677065325`*^9, 3.9021096065333986`*^9},
 CellLabel->
  "Out[1342]=",ExpressionUUID->"ab6b580f-1457-4909-ac9d-d66939d603c5"],

Cell[BoxData[
 FormBox["0.`", TraditionalForm]], "Output",
 CellChangeTimes->{3.902077905461067*^9, 3.902079556361863*^9, 
  3.9021055677065325`*^9, 3.902109606585913*^9},
 CellLabel->
  "Out[1343]=",ExpressionUUID->"5713c6b0-3ea8-4aed-8017-5fa6aa477574"],

Cell[BoxData[
 FormBox["0.`", TraditionalForm]], "Output",
 CellChangeTimes->{3.902077905461067*^9, 3.902079556361863*^9, 
  3.9021055677065325`*^9, 3.902109606637936*^9},
 CellLabel->
  "Out[1344]=",ExpressionUUID->"93477d9c-2aa7-4365-afbe-97e130c16c24"]
}, Open  ]]
}, Open  ]],

Cell["Wilson Dirac fermion", "Section",
 CellChangeTimes->{{3.9016361146751885`*^9, 3.901636131587021*^9}, {
  3.9016725848732595`*^9, 3.9016725901771708`*^9}, {3.9017218885478983`*^9, 
  3.901721896561104*^9}, {3.9017231120110455`*^9, 3.901723113316786*^9}, {
  3.901723184947094*^9, 3.9017231852402806`*^9}, {3.9020695623959527`*^9, 
  3.9020695662025304`*^9}, {3.9020797408790617`*^9, 3.902079744253579*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1],
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"284ac0d1-be30-499e-a645-f6df51213cf1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Some results", "Chapter",
 CellChangeTimes->{{3.9016357690679297`*^9, 3.9016357813436623`*^9}, {
  3.9016360926168385`*^9, 3.9016361105580163`*^9}},
 FontFamily->"Swis721 BT",
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0.5019607843137255, 0.],
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"2d871246-7603-406b-8a5c-97888dae9109"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xx", "=", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yy", "=", 
   RowBox[{"{", 
    RowBox[{"y1", ",", "y2", ",", "y3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"xx", "[", 
     RowBox[{"[", "x", "]"}], "]"}], 
    RowBox[{"yy", "[", 
     RowBox[{"[", "y", "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9020739102527018`*^9, 3.9020739407895746`*^9}},
 CellLabel->
  "In[919]:=",ExpressionUUID->"d5879b1b-efb9-4126-a4cd-11459eedb506"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"x1", " ", "y1"}], 
      RowBox[{"x1", " ", "y2"}], 
      RowBox[{"x1", " ", "y3"}]},
     {
      RowBox[{"x2", " ", "y1"}], 
      RowBox[{"x2", " ", "y2"}], 
      RowBox[{"x2", " ", "y3"}]},
     {
      RowBox[{"x3", " ", "y1"}], 
      RowBox[{"x3", " ", "y2"}], 
      RowBox[{"x3", " ", "y3"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.902073941476181*^9},
 CellLabel->
  "Out[921]=",ExpressionUUID->"6024031f-dbd5-46ea-ba56-8086f374055c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"x", "=", "2"}], ",", 
    RowBox[{"y", "=", "3"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0"}], "}"}], "}"}], ".", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"xx", "[", 
       RowBox[{"[", "x", "]"}], "]"}], 
      RowBox[{"yy", "[", 
       RowBox[{"[", "y", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "1", ",", "3"}], "}"}]}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.9020772363335876`*^9, 3.902077268474658*^9}},
 CellLabel->
  "In[922]:=",ExpressionUUID->"16a28506-25a2-4d54-86ac-4606855b856f"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"x2", " ", "y3"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.9020772694194756`*^9},
 CellLabel->
  "Out[922]=",ExpressionUUID->"87ea5307-53aa-444c-9df9-7fcf03e70b5f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sigma12", "=", 
   RowBox[{
    FractionBox["I", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"gm1", ".", "gm2"}], "-", 
      RowBox[{"gm2", ".", "gm1"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma13", "=", 
   RowBox[{
    FractionBox["I", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"gm1", ".", "gm3"}], "-", 
      RowBox[{"gm3", ".", "gm1"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma14", "=", 
   RowBox[{
    FractionBox["I", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"gm1", ".", "gm4"}], "-", 
      RowBox[{"gm4", ".", "gm1"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma23", "=", 
   RowBox[{
    FractionBox["I", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"gm2", ".", "gm3"}], "-", 
      RowBox[{"gm3", ".", "gm2"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma24", "=", 
   RowBox[{
    FractionBox["I", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"gm2", ".", "gm4"}], "-", 
      RowBox[{"gm4", ".", "gm2"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma34", "=", 
   RowBox[{
    FractionBox["I", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"gm3", ".", "gm4"}], "-", 
      RowBox[{"gm4", ".", "gm3"}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.902112308051264*^9, 3.902112324981739*^9}, {
  3.902129195436867*^9, 3.9021292387744217`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"4c234fe5-c19a-4c8f-8c1c-18e20e96a850"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sigma12", ".", "sigma12"}]], "Input",
 CellChangeTimes->{{3.9021123290335627`*^9, 3.9021123291776752`*^9}},
 CellLabel->
  "In[1346]:=",ExpressionUUID->"6c8c54ae-f10a-499a-bfe3-cb6b7012800c"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.902112329524538*^9},
 CellLabel->
  "Out[1346]=",ExpressionUUID->"94c99cca-250a-41c1-88c9-289d866430f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixExp", "[", 
  RowBox[{"I", " ", "0.3", " ", "sigma12"}], "]"}]], "Input",
 CellChangeTimes->{{3.902112400370881*^9, 3.9021124086132364`*^9}},
 CellLabel->
  "In[1347]:=",ExpressionUUID->"97d4ff63-04f3-4abd-832a-4d6b3da4c18d"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.2955202066613396`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.2955202066613396`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.2955202066613396`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.2955202066613396`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.9021124094561377`*^9},
 CellLabel->
  "Out[1347]=",ExpressionUUID->"da4f08d9-f766-44f7-9550-25af59005468"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", "0.3", "]"}], "gmu"}], "+", 
  RowBox[{
   RowBox[{"Sin", "[", "0.3", "]"}], "sigma12", " ", "I"}]}]], "Input",
 CellChangeTimes->{{3.9021124118533816`*^9, 3.9021124374055796`*^9}},
 CellLabel->
  "In[1350]:=",ExpressionUUID->"1be920f0-fb3f-437f-ba98-58a20bc33911"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.29552020666133955`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.29552020666133955`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.29552020666133955`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.29552020666133955`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021124248733177`*^9, 3.902112437957524*^9}},
 CellLabel->
  "Out[1350]=",ExpressionUUID->"66cb6b3c-2d0c-461a-a9b4-8f5b2dc89b56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixExp", "[", 
  RowBox[{"I", " ", "0.3", " ", "gm1"}], "]"}]], "Input",
 CellChangeTimes->{{3.902112445932765*^9, 3.90211244638422*^9}},
 CellLabel->
  "In[1351]:=",ExpressionUUID->"cb69aa34-c085-46ac-bbef-07e431d22d61"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.2955202066613396`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.2955202066613396`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.29552020666133955`"}], "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.29552020666133955`"}], "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.9021124467746778`*^9},
 CellLabel->
  "Out[1351]=",ExpressionUUID->"230315aa-4dc7-45b6-9d96-0d3a33b22d43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", "0.3", "]"}], "gmu"}], "+", 
  RowBox[{
   RowBox[{"Sin", "[", "0.3", "]"}], "gm1", " ", "I"}]}]], "Input",
 CellChangeTimes->{{3.9021124518224363`*^9, 3.902112452266311*^9}},
 CellLabel->
  "In[1352]:=",ExpressionUUID->"98b17b87-55f9-4d7f-97c0-c9d24bd21695"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.29552020666133955`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.29552020666133955`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.29552020666133955`"}], "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.29552020666133955`"}], "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.902112452648609*^9},
 CellLabel->
  "Out[1352]=",ExpressionUUID->"dd440950-0a56-43ee-969f-99ef0028f5b4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"gm51", "=", 
   RowBox[{"gm5", ".", "gm1"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9021124773618035`*^9, 3.902112480246049*^9}},
 CellLabel->
  "In[1353]:=",ExpressionUUID->"974dd444-a55c-4aab-a8b3-9734e719591d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixExp", "[", 
  RowBox[{"0.3", " ", "gm51"}], "]"}]], "Input",
 CellChangeTimes->{{3.9021124868757315`*^9, 3.902112489220168*^9}},
 CellLabel->
  "In[1354]:=",ExpressionUUID->"24d4ccd0-a83f-46c2-a103-3a742aebb2af"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.2955202066613396`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.2955202066613396`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.29552020666133955`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.29552020666133955`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.955336489125606`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.9021124897754507`*^9},
 CellLabel->
  "Out[1354]=",ExpressionUUID->"bca8ca6d-5c81-4e78-beb1-1bbeca61339e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", "0.3", "]"}], "gmu"}], "+", 
  RowBox[{
   RowBox[{"Sin", "[", "0.3", "]"}], "gm51"}]}]], "Input",
 CellChangeTimes->{3.9021125015549583`*^9},
 CellLabel->
  "In[1355]:=",ExpressionUUID->"d61da2b8-ca62-4e04-9c7b-fef9f9872774"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.955336489125606`", "0.`", "0.`", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.29552020666133955`", " ", "\[ImaginaryI]"}]}]},
     {"0.`", "0.955336489125606`", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.29552020666133955`", " ", "\[ImaginaryI]"}]}], "0.`"},
     {"0.`", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.29552020666133955`", " ", "\[ImaginaryI]"}]}], 
      "0.955336489125606`", "0.`"},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.29552020666133955`", " ", "\[ImaginaryI]"}]}], "0.`", "0.`",
       "0.955336489125606`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.9021125025476475`*^9},
 CellLabel->
  "Out[1355]=",ExpressionUUID->"4509f4fb-5d84-4842-b65b-3069d5333294"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gm4", ".", "sigma12"}], "-", 
  RowBox[{"sigma12", ".", "gm4"}]}]], "Input",
 CellChangeTimes->{{3.9021186187725525`*^9, 3.902118627456275*^9}},
 CellLabel->
  "In[1356]:=",ExpressionUUID->"e37ceab3-6c8c-4bc5-b654-e665bfc267a3"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.9021186282137976`*^9},
 CellLabel->
  "Out[1356]=",ExpressionUUID->"648d15c6-a010-4dd1-9ccc-bb09379f8f1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I", " ", 
  RowBox[{"gm4", ".", "sigma12"}]}]], "Input",
 CellChangeTimes->{{3.9021983996317368`*^9, 3.9021984269180317`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"66a562a6-e10c-4084-93c6-825842c22d65"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", 
      RowBox[{"-", "\[ImaginaryI]"}], "0"},
     {"0", "0", "0", "\[ImaginaryI]"},
     {
      RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0"},
     {"0", "\[ImaginaryI]", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021984038200636`*^9, 3.9021984274498487`*^9}},
 CellLabel->"Out[89]=",ExpressionUUID->"cce026ff-331c-486f-a6b8-1714ebb5f667"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gm5", ".", "gm3"}]], "Input",
 CellChangeTimes->{{3.9021984174158726`*^9, 3.902198420786296*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"47857020-f612-4144-a789-c6301209c4ac"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", 
      RowBox[{"-", "\[ImaginaryI]"}], "0"},
     {"0", "0", "0", "\[ImaginaryI]"},
     {
      RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0"},
     {"0", "\[ImaginaryI]", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.902198414337302*^9, 3.9021984211689386`*^9}},
 CellLabel->"Out[88]=",ExpressionUUID->"61e731ac-da50-4fac-8cb6-062c283950a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"I", " ", 
   RowBox[{"gm5", ".", "gm4", ".", "gm1", ".", "gm5"}]}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"I", " ", 
    RowBox[{"gm4", ".", "gm1"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I", " ", 
   RowBox[{"gm5", ".", "gm4", ".", "gm2", ".", "gm5"}]}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"I", " ", 
    RowBox[{"gm4", ".", "gm2"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I", " ", 
   RowBox[{"gm5", ".", "gm4", ".", "gm3", ".", "gm5"}]}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"I", " ", 
    RowBox[{"gm4", ".", "gm3"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gm5", ".", "gm4", ".", "gm4", ".", "gm5"}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"gm4", ".", "gm4"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gm5", ".", "gm4", ".", "gm5", ".", "gm5"}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"gm4", ".", "gm5"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I", " ", 
   RowBox[{"gm5", ".", "gm4", ".", "sigma12", ".", "gm5"}]}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"I", " ", 
    RowBox[{"gm4", ".", "sigma12"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I", " ", 
   RowBox[{"gm5", ".", "gm4", ".", "sigma13", ".", "gm5"}]}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"I", " ", 
    RowBox[{"gm4", ".", "sigma13"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gm5", ".", "gm4", ".", "sigma14", ".", "gm5"}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"gm4", ".", "sigma14"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I", " ", 
   RowBox[{"gm5", ".", "gm4", ".", "sigma23", ".", "gm5"}]}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"I", " ", 
    RowBox[{"gm4", ".", "sigma23"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gm5", ".", "gm4", ".", "sigma24", ".", "gm5"}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"gm4", ".", "sigma24"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gm5", ".", "gm4", ".", "sigma34", ".", "gm5"}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"gm4", ".", "sigma34"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I", " ", 
   RowBox[{"gm5", ".", "gm4", ".", "gm5", ".", "gm1", ".", "gm5"}]}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"I", " ", 
    RowBox[{"gm4", ".", "gm5", ".", "gm1"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I", " ", 
   RowBox[{"gm5", ".", "gm4", ".", "gm5", ".", "gm2", ".", "gm5"}]}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"I", " ", 
    RowBox[{"gm4", ".", "gm5", ".", "gm2"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I", " ", 
   RowBox[{"gm5", ".", "gm4", ".", "gm5", ".", "gm3", ".", "gm5"}]}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"I", " ", 
    RowBox[{"gm4", ".", "gm5", ".", "gm3"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gm5", ".", "gm4", ".", "gm5", ".", "gm4", ".", "gm5"}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"gm4", ".", "gm5", ".", "gm4"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9021291141864443`*^9, 3.9021291866839767`*^9}, {
  3.902129245972237*^9, 3.902129292858276*^9}, {3.902129462548546*^9, 
  3.902129508653034*^9}, {3.9021295979431424`*^9, 3.9021296327062135`*^9}},
 CellLabel->
  "In[1523]:=",ExpressionUUID->"10f9021e-bdbd-4f5b-97b8-4c865a39d28c"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021291366530914`*^9, 3.9021291879158726`*^9}, {
   3.9021292651871977`*^9, 3.902129294270836*^9}, 3.902129468698662*^9, 
   3.902129509127466*^9, {3.9021296138778257`*^9, 3.902129633155269*^9}},
 CellLabel->
  "Out[1523]=",ExpressionUUID->"f6e7d0ab-3cdc-41cb-82cd-0c9917b166fa"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021291366530914`*^9, 3.9021291879158726`*^9}, {
   3.9021292651871977`*^9, 3.902129294270836*^9}, 3.902129468698662*^9, 
   3.902129509127466*^9, {3.9021296138778257`*^9, 3.9021296331622705`*^9}},
 CellLabel->
  "Out[1524]=",ExpressionUUID->"fe08ba67-4223-4d5d-bc0b-47c91e9d8e6c"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021291366530914`*^9, 3.9021291879158726`*^9}, {
   3.9021292651871977`*^9, 3.902129294270836*^9}, 3.902129468698662*^9, 
   3.902129509127466*^9, {3.9021296138778257`*^9, 3.9021296331672697`*^9}},
 CellLabel->
  "Out[1525]=",ExpressionUUID->"557774ba-9459-4fbb-a134-61411edb21ef"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021291366530914`*^9, 3.9021291879158726`*^9}, {
   3.9021292651871977`*^9, 3.902129294270836*^9}, 3.902129468698662*^9, 
   3.902129509127466*^9, {3.9021296138778257`*^9, 3.902129633170268*^9}},
 CellLabel->
  "Out[1526]=",ExpressionUUID->"b51f5200-707f-40a6-bec9-3fca31503c66"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021291366530914`*^9, 3.9021291879158726`*^9}, {
   3.9021292651871977`*^9, 3.902129294270836*^9}, 3.902129468698662*^9, 
   3.902129509127466*^9, {3.9021296138778257`*^9, 3.9021296331762753`*^9}},
 CellLabel->
  "Out[1527]=",ExpressionUUID->"209a0236-9c94-4645-ab7d-48e0e5e2b4ba"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021291366530914`*^9, 3.9021291879158726`*^9}, {
   3.9021292651871977`*^9, 3.902129294270836*^9}, 3.902129468698662*^9, 
   3.902129509127466*^9, {3.9021296138778257`*^9, 3.9021296331792755`*^9}},
 CellLabel->
  "Out[1528]=",ExpressionUUID->"7d350d04-7e6c-40a7-aab8-63b05b1ba004"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021291366530914`*^9, 3.9021291879158726`*^9}, {
   3.9021292651871977`*^9, 3.902129294270836*^9}, 3.902129468698662*^9, 
   3.902129509127466*^9, {3.9021296138778257`*^9, 3.9021296331812677`*^9}},
 CellLabel->
  "Out[1529]=",ExpressionUUID->"29bf9db8-768a-430d-b8b0-411ff00e765a"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021291366530914`*^9, 3.9021291879158726`*^9}, {
   3.9021292651871977`*^9, 3.902129294270836*^9}, 3.902129468698662*^9, 
   3.902129509127466*^9, {3.9021296138778257`*^9, 3.90212963318427*^9}},
 CellLabel->
  "Out[1530]=",ExpressionUUID->"c458a4a8-d5eb-470f-980a-6c44652bf5dd"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021291366530914`*^9, 3.9021291879158726`*^9}, {
   3.9021292651871977`*^9, 3.902129294270836*^9}, 3.902129468698662*^9, 
   3.902129509127466*^9, {3.9021296138778257`*^9, 3.9021296331892757`*^9}},
 CellLabel->
  "Out[1531]=",ExpressionUUID->"a4aed708-65c4-495c-a46b-c3d5f3098981"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021291366530914`*^9, 3.9021291879158726`*^9}, {
   3.9021292651871977`*^9, 3.902129294270836*^9}, 3.902129468698662*^9, 
   3.902129509127466*^9, {3.9021296138778257`*^9, 3.90212963319127*^9}},
 CellLabel->
  "Out[1532]=",ExpressionUUID->"827c3e14-12bc-48ea-aa99-e5e985a011ce"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021291366530914`*^9, 3.9021291879158726`*^9}, {
   3.9021292651871977`*^9, 3.902129294270836*^9}, 3.902129468698662*^9, 
   3.902129509127466*^9, {3.9021296138778257`*^9, 3.902129633194275*^9}},
 CellLabel->
  "Out[1533]=",ExpressionUUID->"8adade1a-8361-42e9-9a2d-8ec01b9064cd"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021291366530914`*^9, 3.9021291879158726`*^9}, {
   3.9021292651871977`*^9, 3.902129294270836*^9}, 3.902129468698662*^9, 
   3.902129509127466*^9, {3.9021296138778257`*^9, 3.9021296331972733`*^9}},
 CellLabel->
  "Out[1534]=",ExpressionUUID->"9e9c4470-0489-46ea-818e-2f38895e8b6d"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021291366530914`*^9, 3.9021291879158726`*^9}, {
   3.9021292651871977`*^9, 3.902129294270836*^9}, 3.902129468698662*^9, 
   3.902129509127466*^9, {3.9021296138778257`*^9, 3.9021296332012806`*^9}},
 CellLabel->
  "Out[1535]=",ExpressionUUID->"d57a8762-6960-4184-887e-49767cbb95d9"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021291366530914`*^9, 3.9021291879158726`*^9}, {
   3.9021292651871977`*^9, 3.902129294270836*^9}, 3.902129468698662*^9, 
   3.902129509127466*^9, {3.9021296138778257`*^9, 3.9021296332052803`*^9}},
 CellLabel->
  "Out[1536]=",ExpressionUUID->"a52a7ff1-08d4-44bd-a1af-7a4574ff5bb3"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021291366530914`*^9, 3.9021291879158726`*^9}, {
   3.9021292651871977`*^9, 3.902129294270836*^9}, 3.902129468698662*^9, 
   3.902129509127466*^9, {3.9021296138778257`*^9, 3.9021296332072725`*^9}},
 CellLabel->
  "Out[1537]=",ExpressionUUID->"f00da1d6-2055-4710-a2c8-c92eec5c224e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"I", " ", 
   RowBox[{"gm5", ".", "gm1", ".", "gm5"}]}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"I", " ", "gm1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I", " ", 
   RowBox[{"gm5", ".", "gm2", ".", "gm5"}]}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"I", " ", "gm2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I", " ", 
   RowBox[{"gm5", ".", "gm3", ".", "gm5"}]}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"I", " ", "gm3"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I", " ", 
   RowBox[{"gm5", ".", "gm4", ".", "gm5"}]}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"I", " ", "gm4"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gm5", ".", "gm5", ".", "gm5"}], "-", 
  RowBox[{"ConjugateTranspose", "[", "gm5", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gm5", ".", "sigma12", ".", "gm5"}], "-", 
  RowBox[{
  "ConjugateTranspose", "[", "sigma12", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gm5", ".", "sigma13", ".", "gm5"}], "-", 
  RowBox[{
  "ConjugateTranspose", "[", "sigma13", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gm5", ".", "sigma14", ".", "gm5"}], "-", 
  RowBox[{
  "ConjugateTranspose", "[", "sigma14", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gm5", ".", "sigma23", ".", "gm5"}], "-", 
  RowBox[{
  "ConjugateTranspose", "[", "sigma23", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gm5", ".", "sigma24", ".", "gm5"}], "-", 
  RowBox[{
  "ConjugateTranspose", "[", "sigma24", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gm5", ".", "sigma34", ".", "gm5"}], "-", 
  RowBox[{
  "ConjugateTranspose", "[", "sigma34", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gm5", ".", "gm5", ".", "gm1", ".", "gm5"}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"gm5", ".", "gm1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gm5", ".", "gm5", ".", "gm2", ".", "gm5"}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"gm5", ".", "gm2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gm5", ".", "gm5", ".", "gm3", ".", "gm5"}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"gm5", ".", "gm3"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gm5", ".", "gm5", ".", "gm4", ".", "gm5"}], "-", 
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"gm5", ".", "gm4"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.902129527541863*^9, 3.9021295881055717`*^9}, {
  3.9021296970433683`*^9, 3.9021297135385103`*^9}},
 CellLabel->
  "In[1553]:=",ExpressionUUID->"dfc17aba-4004-4db3-82c8-2337bdadad3d"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021295306642046`*^9, 3.902129588465339*^9}, {
  3.9021297036709595`*^9, 3.902129713875023*^9}},
 CellLabel->
  "Out[1553]=",ExpressionUUID->"bf6110a2-baa6-4a88-8064-f42692620ed0"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021295306642046`*^9, 3.902129588465339*^9}, {
  3.9021297036709595`*^9, 3.9021297138810163`*^9}},
 CellLabel->
  "Out[1554]=",ExpressionUUID->"4698a896-3d50-4e9a-bc9a-cb8bc4f1b758"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021295306642046`*^9, 3.902129588465339*^9}, {
  3.9021297036709595`*^9, 3.9021297138860254`*^9}},
 CellLabel->
  "Out[1555]=",ExpressionUUID->"e6801b3a-76f6-42fa-b864-a0157bad59fa"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021295306642046`*^9, 3.902129588465339*^9}, {
  3.9021297036709595`*^9, 3.9021297138890257`*^9}},
 CellLabel->
  "Out[1556]=",ExpressionUUID->"e2e70612-a736-4ecb-8697-7e1a8ac2b70a"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021295306642046`*^9, 3.902129588465339*^9}, {
  3.9021297036709595`*^9, 3.9021297138960257`*^9}},
 CellLabel->
  "Out[1557]=",ExpressionUUID->"69bc9402-2000-44ce-842e-28434ef8c60b"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021295306642046`*^9, 3.902129588465339*^9}, {
  3.9021297036709595`*^9, 3.9021297138995357`*^9}},
 CellLabel->
  "Out[1558]=",ExpressionUUID->"8b2505d3-5b1b-4ca4-bed0-4813e5c3dde6"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021295306642046`*^9, 3.902129588465339*^9}, {
  3.9021297036709595`*^9, 3.9021297139045353`*^9}},
 CellLabel->
  "Out[1559]=",ExpressionUUID->"fb834aba-83af-44bd-93f6-9236efaad281"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021295306642046`*^9, 3.902129588465339*^9}, {
  3.9021297036709595`*^9, 3.9021297139095354`*^9}},
 CellLabel->
  "Out[1560]=",ExpressionUUID->"8a394cf8-37d0-4f6a-9bb3-6dab7aed9839"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021295306642046`*^9, 3.902129588465339*^9}, {
  3.9021297036709595`*^9, 3.90212971391354*^9}},
 CellLabel->
  "Out[1561]=",ExpressionUUID->"06ba2966-98d0-4d3b-a5d5-cd4e69e2c1e8"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021295306642046`*^9, 3.902129588465339*^9}, {
  3.9021297036709595`*^9, 3.9021297139165335`*^9}},
 CellLabel->
  "Out[1562]=",ExpressionUUID->"42c0703b-d04d-42a0-8966-7b5b127422e6"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021295306642046`*^9, 3.902129588465339*^9}, {
  3.9021297036709595`*^9, 3.9021297139215364`*^9}},
 CellLabel->
  "Out[1563]=",ExpressionUUID->"f4d13f61-ea7e-4f1f-9705-102dd446a3ac"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021295306642046`*^9, 3.902129588465339*^9}, {
  3.9021297036709595`*^9, 3.902129713926536*^9}},
 CellLabel->
  "Out[1564]=",ExpressionUUID->"accdbd13-0219-4a75-b6f4-9c039a24226f"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021295306642046`*^9, 3.902129588465339*^9}, {
  3.9021297036709595`*^9, 3.902129713930541*^9}},
 CellLabel->
  "Out[1565]=",ExpressionUUID->"82a072c0-e39f-470b-90cd-83ca3d7f164d"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021295306642046`*^9, 3.902129588465339*^9}, {
  3.9021297036709595`*^9, 3.902129713933536*^9}},
 CellLabel->
  "Out[1566]=",ExpressionUUID->"fa5a8835-5709-4fb2-b254-9294b6f600a9"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9021295306642046`*^9, 3.902129588465339*^9}, {
  3.9021297036709595`*^9, 3.9021297139375362`*^9}},
 CellLabel->
  "Out[1567]=",ExpressionUUID->"1ff45e5f-f073-4547-b944-675afdc9a482"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "I"}], " ", 
  RowBox[{"gm4", ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.902231691253213*^9, 3.9022317270792713`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"1e2f37be-9716-4da7-862a-589aa6fd857d"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", 
      RowBox[{"-", "\[ImaginaryI]"}], "0"},
     {"0", "0", "0", "\[ImaginaryI]"},
     {
      RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0"},
     {"0", "\[ImaginaryI]", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.902231694041329*^9, 3.902231728439578*^9}},
 CellLabel->"Out[93]=",ExpressionUUID->"7cea0870-6a8f-4f36-9969-ef2308db3417"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1269, 641},
WindowMargins->{{-1420, Automatic}, {Automatic, 226}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5b42c708-f384-4697-88c2-385f73e0449e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 344, 7, 83, "Chapter",ExpressionUUID->"1a8325b0-ed15-4586-8d07-4b0361d8c495"],
Cell[927, 31, 229, 4, 28, "Input",ExpressionUUID->"771e7245-5353-4bc7-ad30-cf8b3b279260"],
Cell[CellGroupData[{
Cell[1181, 39, 284, 6, 71, "Section",ExpressionUUID->"8ad6be80-8c7c-4c10-8445-3e8615939bfd"],
Cell[1468, 47, 34609, 938, 2443, "Input",ExpressionUUID->"192f27a7-29f5-4744-8fe5-c56bb3f5d821",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[36114, 990, 362, 7, 71, "Section",ExpressionUUID->"549c0153-bd20-41d5-94e2-35a4cf647b10"],
Cell[36479, 999, 3289, 75, 121, "Input",ExpressionUUID->"808bc477-ceae-4629-843e-664db32bff02",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[39805, 1079, 356, 7, 57, "Section",ExpressionUUID->"a74b09e2-8aaf-4a42-a6bf-95234b67b7af"],
Cell[40164, 1088, 44731, 739, 142, "Text",ExpressionUUID->"57f98013-d6b1-4736-9de3-97500c86791e"],
Cell[84898, 1829, 2447, 64, 121, "Input",ExpressionUUID->"0e96edc8-e1b5-43a3-863c-268204d50380",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[87382, 1898, 401, 7, 71, "Section",ExpressionUUID->"e76c3dee-b864-4d99-9c89-a2424ebe92e5"],
Cell[87786, 1907, 4950, 88, 73, "Text",ExpressionUUID->"4198238c-ab47-4bea-b76b-3d9db15c5ad3"],
Cell[92739, 1997, 3158, 86, 254, "Input",ExpressionUUID->"bc8ace03-8f45-4421-ba58-97c5a848be08",
 InitializationCell->True],
Cell[95900, 2085, 24695, 410, 84, "Text",ExpressionUUID->"ef0eb815-bd21-4703-976b-cdc7c482dc4f"],
Cell[120598, 2497, 1571, 44, 82, "Input",ExpressionUUID->"ae15c97e-4bdc-47f8-9b42-9b35e56c25ac",
 InitializationCell->True],
Cell[122172, 2543, 25759, 429, 100, "Text",ExpressionUUID->"ac2f7e9c-3086-4fb0-8981-ed4b3a0e24be"],
Cell[147934, 2974, 6256, 159, 424, "Input",ExpressionUUID->"623ad2c9-5006-4b04-b66b-e6bf8406ec9a",
 InitializationCell->True],
Cell[154193, 3135, 49535, 821, 275, "Text",ExpressionUUID->"803e19cd-2ec1-4e31-9e6e-3062b68a2986"],
Cell[203731, 3958, 11345, 284, 671, "Input",ExpressionUUID->"0c24df63-d015-4953-9136-19194063aa2f",
 InitializationCell->True],
Cell[215079, 4244, 18549, 309, 84, "Text",ExpressionUUID->"de41a89b-c033-4e1c-9a4f-975752645676"],
Cell[233631, 4555, 7395, 195, 500, "Input",ExpressionUUID->"b72bff9c-4290-4b41-88ea-92f29dcebdac",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[241075, 4756, 339, 7, 83, "Chapter",ExpressionUUID->"4573a2c6-e8a2-436c-b232-f4a547a2fb58"],
Cell[241417, 4765, 938, 28, 28, "Input",ExpressionUUID->"5bcf19eb-0f7f-4f04-a6a1-983c9736095e"],
Cell[CellGroupData[{
Cell[242380, 4797, 511, 9, 71, "Section",ExpressionUUID->"d5e59a5f-7dff-4adf-a145-d3436d9cd862"],
Cell[242894, 4808, 5159, 135, 485, "Input",ExpressionUUID->"1204a534-308b-4484-8d52-7830256dcfbd"],
Cell[248056, 4945, 1466, 27, 48, "Input",ExpressionUUID->"89067abd-06e5-4613-b1b6-f9534d059210"],
Cell[249525, 4974, 292, 8, 28, "Input",ExpressionUUID->"9bf4941a-84d9-4fd7-b5d0-91fa6624b5b8"],
Cell[249820, 4984, 5762, 150, 390, "Input",ExpressionUUID->"93e11406-9958-4222-ab08-1b78fb448dd2"],
Cell[CellGroupData[{
Cell[255607, 5138, 2484, 61, 390, "Input",ExpressionUUID->"3479f9bf-c6c7-4827-a41e-298fbbcac5ee"],
Cell[258094, 5201, 257, 5, 45, "Output",ExpressionUUID->"26fbfcfb-b5be-422b-9c1d-919600678517"],
Cell[258354, 5208, 272, 5, 45, "Output",ExpressionUUID->"46c8c7e1-e6c3-475f-bde9-decac7272975"],
Cell[258629, 5215, 257, 5, 45, "Output",ExpressionUUID->"c8bc9a61-879d-4deb-8e28-7ebc138d17c3"],
Cell[258889, 5222, 255, 5, 45, "Output",ExpressionUUID->"2409f820-a0d9-41b1-983b-d19f262eda01"],
Cell[259147, 5229, 255, 5, 45, "Output",ExpressionUUID->"38d3d0a5-892f-403b-b3ff-8da1d99d95de"],
Cell[259405, 5236, 255, 5, 45, "Output",ExpressionUUID->"ca8f8cbc-f4e1-41d2-88ef-3812190f5a63"],
Cell[259663, 5243, 255, 5, 45, "Output",ExpressionUUID->"d847faf6-ae81-4fc9-9d44-55de4106c478"],
Cell[259921, 5250, 257, 5, 45, "Output",ExpressionUUID->"c12e3d0b-6404-499f-a0ad-3fa1f1010075"],
Cell[260181, 5257, 255, 5, 45, "Output",ExpressionUUID->"6d2f590c-cbc6-4b60-b144-f1ba579d343d"],
Cell[260439, 5264, 257, 5, 45, "Output",ExpressionUUID->"9b16f53a-50ff-43ef-9cca-074b459293fb"],
Cell[260699, 5271, 257, 5, 45, "Output",ExpressionUUID->"32a88a9c-76f4-42c3-ab14-790e667f9138"],
Cell[260959, 5278, 257, 5, 45, "Output",ExpressionUUID->"4a1d9e94-c940-4816-8eb2-2526001c90a2"],
Cell[261219, 5285, 255, 5, 45, "Output",ExpressionUUID->"cb8e02b7-0c26-4023-97e1-6ff712ce734f"],
Cell[261477, 5292, 255, 5, 45, "Output",ExpressionUUID->"4226d49c-be37-4dd5-81fe-efd0186cc758"],
Cell[261735, 5299, 257, 5, 45, "Output",ExpressionUUID->"ab6b580f-1457-4909-ac9d-d66939d603c5"],
Cell[261995, 5306, 255, 5, 45, "Output",ExpressionUUID->"5713c6b0-3ea8-4aed-8017-5fa6aa477574"],
Cell[262253, 5313, 255, 5, 45, "Output",ExpressionUUID->"93477d9c-2aa7-4365-afbe-97e130c16c24"]
}, Open  ]]
}, Open  ]],
Cell[262535, 5322, 562, 9, 71, "Section",ExpressionUUID->"284ac0d1-be30-499e-a645-f6df51213cf1"]
}, Closed]],
Cell[CellGroupData[{
Cell[263134, 5336, 348, 7, 72, "Chapter",ExpressionUUID->"2d871246-7603-406b-8a5c-97888dae9109"],
Cell[CellGroupData[{
Cell[263507, 5347, 765, 24, 67, "Input",ExpressionUUID->"d5879b1b-efb9-4126-a4cd-11459eedb506"],
Cell[264275, 5373, 866, 26, 68, "Output",ExpressionUUID->"6024031f-dbd5-46ea-ba56-8086f374055c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265178, 5404, 919, 28, 48, "Input",ExpressionUUID->"16a28506-25a2-4d54-86ac-4606855b856f"],
Cell[266100, 5434, 582, 16, 32, "Output",ExpressionUUID->"87ea5307-53aa-444c-9df9-7fcf03e70b5f"]
}, Open  ]],
Cell[266697, 5453, 1571, 51, 237, "Input",ExpressionUUID->"4c234fe5-c19a-4c8f-8c1c-18e20e96a850"],
Cell[CellGroupData[{
Cell[268293, 5508, 215, 4, 28, "Input",ExpressionUUID->"6c8c54ae-f10a-499a-bfe3-cb6b7012800c"],
Cell[268511, 5514, 648, 18, 82, "Output",ExpressionUUID->"94c99cca-250a-41c1-88c9-289d866430f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269196, 5537, 255, 5, 28, "Input",ExpressionUUID->"97d4ff63-04f3-4abd-832a-4d6b3da4c18d"],
Cell[269454, 5544, 2230, 50, 82, "Output",ExpressionUUID->"da4f08d9-f766-44f7-9550-25af59005468"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271721, 5599, 323, 8, 28, "Input",ExpressionUUID->"1be920f0-fb3f-437f-ba98-58a20bc33911"],
Cell[272047, 5609, 2258, 50, 82, "Output",ExpressionUUID->"66cb6b3c-2d0c-461a-a9b4-8f5b2dc89b56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274342, 5664, 248, 5, 28, "Input",ExpressionUUID->"cb69aa34-c085-46ac-bbef-07e431d22d61"],
Cell[274593, 5671, 2238, 52, 82, "Output",ExpressionUUID->"230315aa-4dc7-45b6-9d96-0d3a33b22d43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276868, 5728, 317, 8, 28, "Input",ExpressionUUID->"98b17b87-55f9-4d7f-97c0-c9d24bd21695"],
Cell[277188, 5738, 2238, 52, 82, "Output",ExpressionUUID->"dd440950-0a56-43ee-969f-99ef0028f5b4"]
}, Open  ]],
Cell[279441, 5793, 250, 6, 28, "Input",ExpressionUUID->"974dd444-a55c-4aab-a8b3-9734e719591d"],
Cell[CellGroupData[{
Cell[279716, 5803, 242, 5, 28, "Input",ExpressionUUID->"24d4ccd0-a83f-46c2-a103-3a742aebb2af"],
Cell[279961, 5810, 2232, 50, 82, "Output",ExpressionUUID->"bca8ca6d-5c81-4e78-beb1-1bbeca61339e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282230, 5865, 284, 8, 28, "Input",ExpressionUUID->"d61da2b8-ca62-4e04-9c7b-fef9f9872774"],
Cell[282517, 5875, 1180, 28, 82, "Output",ExpressionUUID->"4509f4fb-5d84-4842-b65b-3069d5333294"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283734, 5908, 263, 6, 28, "Input",ExpressionUUID->"e37ceab3-6c8c-4bc5-b654-e665bfc267a3"],
Cell[284000, 5916, 650, 18, 82, "Output",ExpressionUUID->"648d15c6-a010-4dd1-9ccc-bb09379f8f1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284687, 5939, 229, 4, 28, "Input",ExpressionUUID->"66a562a6-e10c-4084-93c6-825842c22d65"],
Cell[284919, 5945, 763, 19, 82, "Output",ExpressionUUID->"cce026ff-331c-486f-a6b8-1714ebb5f667"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285719, 5969, 200, 3, 28, "Input",ExpressionUUID->"47857020-f612-4144-a789-c6301209c4ac"],
Cell[285922, 5974, 761, 19, 82, "Output",ExpressionUUID->"61e731ac-da50-4fac-8cb6-062c283950a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286720, 5998, 3498, 83, 295, "Input",ExpressionUUID->"10f9021e-bdbd-4f5b-97b8-4c865a39d28c"],
Cell[290221, 6083, 824, 20, 82, "Output",ExpressionUUID->"f6e7d0ab-3cdc-41cb-82cd-0c9917b166fa"],
Cell[291048, 6105, 826, 20, 82, "Output",ExpressionUUID->"fe08ba67-4223-4d5d-bc0b-47c91e9d8e6c"],
Cell[291877, 6127, 826, 20, 82, "Output",ExpressionUUID->"557774ba-9459-4fbb-a134-61411edb21ef"],
Cell[292706, 6149, 824, 20, 82, "Output",ExpressionUUID->"b51f5200-707f-40a6-bec9-3fca31503c66"],
Cell[293533, 6171, 826, 20, 82, "Output",ExpressionUUID->"209a0236-9c94-4645-ab7d-48e0e5e2b4ba"],
Cell[294362, 6193, 826, 20, 82, "Output",ExpressionUUID->"7d350d04-7e6c-40a7-aab8-63b05b1ba004"],
Cell[295191, 6215, 826, 20, 82, "Output",ExpressionUUID->"29bf9db8-768a-430d-b8b0-411ff00e765a"],
Cell[296020, 6237, 823, 20, 82, "Output",ExpressionUUID->"c458a4a8-d5eb-470f-980a-6c44652bf5dd"],
Cell[296846, 6259, 826, 20, 82, "Output",ExpressionUUID->"a4aed708-65c4-495c-a46b-c3d5f3098981"],
Cell[297675, 6281, 823, 20, 82, "Output",ExpressionUUID->"827c3e14-12bc-48ea-aa99-e5e985a011ce"],
Cell[298501, 6303, 824, 20, 82, "Output",ExpressionUUID->"8adade1a-8361-42e9-9a2d-8ec01b9064cd"],
Cell[299328, 6325, 826, 20, 82, "Output",ExpressionUUID->"9e9c4470-0489-46ea-818e-2f38895e8b6d"],
Cell[300157, 6347, 826, 20, 82, "Output",ExpressionUUID->"d57a8762-6960-4184-887e-49767cbb95d9"],
Cell[300986, 6369, 826, 20, 82, "Output",ExpressionUUID->"a52a7ff1-08d4-44bd-a1af-7a4574ff5bb3"],
Cell[301815, 6391, 826, 20, 82, "Output",ExpressionUUID->"f00da1d6-2055-4710-a2c8-c92eec5c224e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302678, 6416, 2656, 67, 295, "Input",ExpressionUUID->"dfc17aba-4004-4db3-82c8-2337bdadad3d"],
Cell[305337, 6485, 725, 19, 82, "Output",ExpressionUUID->"bf6110a2-baa6-4a88-8064-f42692620ed0"],
Cell[306065, 6506, 727, 19, 82, "Output",ExpressionUUID->"4698a896-3d50-4e9a-bc9a-cb8bc4f1b758"],
Cell[306795, 6527, 727, 19, 82, "Output",ExpressionUUID->"e6801b3a-76f6-42fa-b864-a0157bad59fa"],
Cell[307525, 6548, 727, 19, 82, "Output",ExpressionUUID->"e2e70612-a736-4ecb-8697-7e1a8ac2b70a"],
Cell[308255, 6569, 727, 19, 82, "Output",ExpressionUUID->"69bc9402-2000-44ce-842e-28434ef8c60b"],
Cell[308985, 6590, 727, 19, 82, "Output",ExpressionUUID->"8b2505d3-5b1b-4ca4-bed0-4813e5c3dde6"],
Cell[309715, 6611, 727, 19, 82, "Output",ExpressionUUID->"fb834aba-83af-44bd-93f6-9236efaad281"],
Cell[310445, 6632, 727, 19, 82, "Output",ExpressionUUID->"8a394cf8-37d0-4f6a-9bb3-6dab7aed9839"],
Cell[311175, 6653, 724, 19, 82, "Output",ExpressionUUID->"06ba2966-98d0-4d3b-a5d5-cd4e69e2c1e8"],
Cell[311902, 6674, 727, 19, 82, "Output",ExpressionUUID->"42c0703b-d04d-42a0-8966-7b5b127422e6"],
Cell[312632, 6695, 727, 19, 82, "Output",ExpressionUUID->"f4d13f61-ea7e-4f1f-9705-102dd446a3ac"],
Cell[313362, 6716, 725, 19, 82, "Output",ExpressionUUID->"accdbd13-0219-4a75-b6f4-9c039a24226f"],
Cell[314090, 6737, 725, 19, 82, "Output",ExpressionUUID->"82a072c0-e39f-470b-90cd-83ca3d7f164d"],
Cell[314818, 6758, 725, 19, 82, "Output",ExpressionUUID->"fa5a8835-5709-4fb2-b254-9294b6f600a9"],
Cell[315546, 6779, 727, 19, 82, "Output",ExpressionUUID->"1ff45e5f-f073-4547-b944-675afdc9a482"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316310, 6803, 646, 17, 28, "Input",ExpressionUUID->"1e2f37be-9716-4da7-862a-589aa6fd857d"],
Cell[316959, 6822, 759, 19, 82, "Output",ExpressionUUID->"7cea0870-6a8f-4f36-9969-ef2308db3417"]
}, Open  ]]
}, Open  ]]
}
]
*)

